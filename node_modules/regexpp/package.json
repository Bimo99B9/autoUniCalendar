{
  "name": "regexpp",
<<<<<<< HEAD
  "version": "3.2.0",
  "description": "Regular expression parser for ECMAScript.",
  "engines": {
    "node": ">=8"
=======
  "version": "2.0.1",
  "description": "Regular expression parser for ECMAScript 2018.",
  "engines": {
    "node": ">=6.5.0"
>>>>>>> 2cfd330b (move react to root dir)
  },
  "main": "index",
  "files": [
    "index.*"
  ],
<<<<<<< HEAD
  "exports": {
    ".": {
      "import": "./index.mjs",
      "default": "./index.js"
    },
    "./package.json": "./package.json"
  },
  "dependencies": {},
  "devDependencies": {
    "@mysticatea/eslint-plugin": "^11.0.0",
    "@types/eslint": "^4.16.2",
    "@types/jsdom": "^12.2.4",
    "@types/mocha": "^5.2.2",
    "@types/node": "^12.6.8",
    "codecov": "^3.5.0",
    "dts-bundle": "^0.7.3",
    "eslint": "^6.1.0",
    "jsdom": "^15.1.1",
    "mocha": "^6.2.0",
    "npm-run-all": "^4.1.5",
    "nyc": "^14.1.1",
    "rimraf": "^2.6.2",
    "rollup": "^1.17.0",
    "rollup-plugin-node-resolve": "^5.2.0",
    "rollup-plugin-sourcemaps": "^0.4.2",
    "ts-node": "^8.3.0",
    "typescript": "^3.5.3"
=======
  "dependencies": {},
  "devDependencies": {
    "@types/eslint": "^4.16.2",
    "@types/mocha": "^5.2.2",
    "@types/node": "^10.3.3",
    "coveralls": "^3.0.1",
    "dts-bundle": "^0.7.3",
    "eslint": "^4.19.1",
    "eslint-plugin-mysticatea": "^5.0.0-beta.15",
    "mocha": "^5.2.0",
    "npm-run-all": "^4.1.3",
    "nyc": "^12.0.2",
    "rimraf": "^2.6.2",
    "rollup": "^0.60.7",
    "rollup-plugin-node-resolve": "^3.3.0",
    "rollup-plugin-sourcemaps": "^0.4.2",
    "rollup-watch": "^4.3.1",
    "ts-node": "^6.1.1",
    "typescript": "^2.9.2",
    "typescript-eslint-parser": "^16.0.0"
>>>>>>> 2cfd330b (move react to root dir)
  },
  "scripts": {
    "prebuild": "npm run -s clean",
    "build": "run-s build:*",
    "build:tsc": "tsc --module es2015",
    "build:rollup": "rollup -c",
    "build:dts": "dts-bundle --name regexpp --main .temp/index.d.ts --out ../index.d.ts",
    "clean": "rimraf .temp index.*",
<<<<<<< HEAD
    "codecov": "nyc report -r lcovonly && codecov -t ${CODECOV_TOKEN} --disable=gcov",
=======
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
>>>>>>> 2cfd330b (move react to root dir)
    "lint": "eslint scripts src test --ext .ts",
    "pretest": "run-s build lint",
    "test": "nyc _mocha \"test/*.ts\" --reporter dot --timeout 10000",
    "update:test": "ts-node scripts/update-fixtures.ts",
<<<<<<< HEAD
    "update:unicode": "run-s update:unicode:*",
    "update:unicode:ids": "ts-node scripts/update-unicode-ids.ts",
    "update:unicode:props": "ts-node scripts/update-unicode-properties.ts",
=======
    "update:ids": "ts-node scripts/update-unicode-ids.ts",
>>>>>>> 2cfd330b (move react to root dir)
    "preversion": "npm test",
    "version": "npm run -s build",
    "postversion": "git push && git push --tags",
    "prewatch": "npm run -s clean",
<<<<<<< HEAD
    "watch": "_mocha \"test/*.ts\" --require ts-node/register --reporter dot --timeout 10000 --watch-extensions ts --watch --growl"
=======
    "watch": "_mocha \"test/*.ts\" --require ts-node/register --reporter dot --timeout 10000 --watch-extensions .ts --watch --growl"
>>>>>>> 2cfd330b (move react to root dir)
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mysticatea/regexpp.git"
  },
  "keywords": [
    "regexp",
    "regular",
    "expression",
    "parser",
    "validator",
    "ast",
    "abstract",
    "syntax",
    "tree",
    "ecmascript",
    "es2015",
    "es2016",
    "es2017",
    "es2018",
<<<<<<< HEAD
    "es2019",
    "es2020",
=======
>>>>>>> 2cfd330b (move react to root dir)
    "annexB"
  ],
  "author": "Toru Nagashima (https://github.com/mysticatea)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mysticatea/regexpp/issues"
  },
<<<<<<< HEAD
  "homepage": "https://github.com/mysticatea/regexpp#readme",
  "funding": "https://github.com/sponsors/mysticatea"
=======
  "homepage": "https://github.com/mysticatea/regexpp#readme"
>>>>>>> 2cfd330b (move react to root dir)
}

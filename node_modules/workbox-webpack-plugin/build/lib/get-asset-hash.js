<<<<<<< HEAD
"use strict";
/*
  Copyright 2018 Google LLC

  Use of this source code is governed by an MIT-style
  license that can be found in the LICENSE file or at
  https://opensource.org/licenses/MIT.
*/
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAssetHash = void 0;
const crypto_1 = __importDefault(require("crypto"));
/**
 * @param {Asset} asset
=======
'use strict';

/*
  Copyright 2017 Google Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/

var crypto = require('crypto');

/**
 * @param {WebpackAsset} asset
>>>>>>> 2cfd330b (move react to root dir)
 * @return {string} The MD5 hash of the asset's source.
 *
 * @private
 */
<<<<<<< HEAD
function getAssetHash(asset) {
    // If webpack has the asset marked as immutable, then we don't need to
    // use an out-of-band revision for it.
    // See https://github.com/webpack/webpack/issues/9038
    if (asset.info && asset.info.immutable) {
        return null;
    }
    return crypto_1.default.createHash('md5')
        .update(Buffer.from(asset.source.source()))
        .digest('hex');
}
exports.getAssetHash = getAssetHash;
=======
module.exports = function (asset) {
  return crypto.createHash('md5').update(asset.source(), 'utf8').digest('hex');
};
>>>>>>> 2cfd330b (move react to root dir)

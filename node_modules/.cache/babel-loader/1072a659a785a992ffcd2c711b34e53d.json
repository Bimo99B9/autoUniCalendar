{"ast":null,"code":"import _objectSpread from\"/home/mier/git/epiCalendar/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/mier/git/epiCalendar/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useContext}from\"react\";import classes from\"./Checkboxes.module.css\";import SettingsContext from\"../../store/settings-context\";// Component that represents the 3 checkboxes\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Checkboxes=function Checkboxes(){// Access the settings context\nvar ctx=useContext(SettingsContext);// State for the checkboxes\nvar _useState=useState({parse:true,parseDisabled:false}),_useState2=_slicedToArray(_useState,2),parse=_useState2[0],setParse=_useState2[1];var _useState3=useState({experimental:true,experimentalDisabled:false}),_useState4=_slicedToArray(_useState3,2),experimental=_useState4[0],setExperimental=_useState4[1];var _useState5=useState({classParsing:true,classParsingDisabled:false}),_useState6=_slicedToArray(_useState5,2),classParse=_useState6[0],setClassParse=_useState6[1];// No dependecies as we want the checkboxes to be updated only on first render\nuseEffect(function(){if(ctx.university===\"uo\"){setParse({parse:ctx.oviedoCheck.parse,parseDisabled:ctx.oviedoCheck.parseDisabled});setExperimental({experimental:ctx.oviedoCheck.experimental,experimentalDisabled:ctx.oviedoCheck.experimentalDisabled});setClassParse({classParsing:ctx.oviedoCheck.classParsing,classParsingDisabled:ctx.oviedoCheck.classParsingDisabled});}else if(ctx.university===\"epi\"){setParse({parse:ctx.epiCheck.parse,parseDisabled:ctx.epiCheck.parseDisabled});setExperimental({experimental:ctx.epiCheck.experimental,experimentalDisabled:ctx.epiCheck.experimentalDisabled});setClassParse({classParsing:ctx.epiCheck.classParsing,classParsingDisabled:ctx.epiCheck.classParsingDisabled});}},[ctx.university,ctx.update]);// Effect for updating the checkboxes\nuseEffect(function(){ctx.parseHandler(parse.parse);ctx.experimentalHandler(experimental.experimental);ctx.classParsingHandler(classParse.classParsing);},[parse.parse,experimental.experimental,classParse.classParsing]);// Function that handles the checkbox change (parse or location)\nvar parseHandler=function parseHandler(){setParse(function(previousState){return _objectSpread(_objectSpread({},previousState),{},{parse:!previousState.parse});});ctx.updateHandler(true);};// Function that handles the checkbox change (experimental or experimental-location)\nvar experimentalHandler=function experimentalHandler(){setExperimental(function(previousState){return _objectSpread(_objectSpread({},previousState),{},{experimental:!previousState.experimental});});ctx.updateHandler(true);};// Function that handles the checkbox change (class-type or class-type)\nvar classParsingHandler=function classParsingHandler(){setClassParse(function(previousState){return _objectSpread(_objectSpread({},previousState),{},{classParsing:!previousState.classParsing});});ctx.updateHandler(true);};return/*#__PURE__*/_jsxs(\"div\",{className:classes.overall,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"location-parsing\",checked:parse.parse,onChange:parseHandler,disabled:parse.parseDisabled}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"location-parsing\",children:\"Location parsing (EPI Gij\\xF3n)\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"experimental-parsing\",checked:experimental.experimental,onChange:experimentalHandler,disabled:experimental.experimentalDisabled}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"experimental-parsing\",children:\"Experimental location parsing (EPI Gij\\xF3n)\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"class-parsing\",checked:classParse.classParsing,onChange:classParsingHandler}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"class-parsing\",children:\"Class type parsing\"})]})]});};export default Checkboxes;","map":{"version":3,"names":["React","useState","useEffect","useContext","classes","SettingsContext","Checkboxes","ctx","parse","parseDisabled","setParse","experimental","experimentalDisabled","setExperimental","classParsing","classParsingDisabled","classParse","setClassParse","university","oviedoCheck","epiCheck","update","parseHandler","experimentalHandler","classParsingHandler","previousState","updateHandler","overall"],"sources":["/home/mier/git/epiCalendar/src/components/Settings/Checkboxes.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\n\nimport classes from \"./Checkboxes.module.css\";\nimport SettingsContext from \"../../store/settings-context\";\n\n// Component that represents the 3 checkboxes\nconst Checkboxes = () => {\n  // Access the settings context\n  const ctx = useContext(SettingsContext);\n\n  // State for the checkboxes\n  const [parse, setParse] = useState({ parse: true, parseDisabled: false });\n  const [experimental, setExperimental] = useState({\n    experimental: true,\n    experimentalDisabled: false,\n  });\n  const [classParse, setClassParse] = useState({\n    classParsing: true,\n    classParsingDisabled: false,\n  });\n\n  // No dependecies as we want the checkboxes to be updated only on first render\n  useEffect(() => {\n    if (ctx.university === \"uo\") {\n      setParse({\n        parse: ctx.oviedoCheck.parse,\n        parseDisabled: ctx.oviedoCheck.parseDisabled,\n      });\n      setExperimental({\n        experimental: ctx.oviedoCheck.experimental,\n        experimentalDisabled: ctx.oviedoCheck.experimentalDisabled,\n      });\n      setClassParse({\n        classParsing: ctx.oviedoCheck.classParsing,\n        classParsingDisabled: ctx.oviedoCheck.classParsingDisabled,\n      });\n    } else if (ctx.university === \"epi\") {\n      setParse({\n        parse: ctx.epiCheck.parse,\n        parseDisabled: ctx.epiCheck.parseDisabled,\n      });\n      setExperimental({\n        experimental: ctx.epiCheck.experimental,\n        experimentalDisabled: ctx.epiCheck.experimentalDisabled,\n      });\n      setClassParse({\n        classParsing: ctx.epiCheck.classParsing,\n        classParsingDisabled: ctx.epiCheck.classParsingDisabled,\n      });\n    }\n  }, [ctx.university, ctx.update]);\n\n  // Effect for updating the checkboxes\n  useEffect(() => {\n    ctx.parseHandler(parse.parse);\n    ctx.experimentalHandler(experimental.experimental);\n    ctx.classParsingHandler(classParse.classParsing);\n  }, [parse.parse, experimental.experimental, classParse.classParsing]);\n\n  // Function that handles the checkbox change (parse or location)\n  const parseHandler = () => {\n    setParse((previousState) => ({\n      ...previousState,\n      parse: !previousState.parse,\n    }));\n    ctx.updateHandler(true);\n  };\n\n  // Function that handles the checkbox change (experimental or experimental-location)\n  const experimentalHandler = () => {\n    setExperimental((previousState) => ({\n      ...previousState,\n      experimental: !previousState.experimental,\n    }));\n    ctx.updateHandler(true);\n  };\n\n  // Function that handles the checkbox change (class-type or class-type)\n  const classParsingHandler = () => {\n    setClassParse((previousState) => ({\n      ...previousState,\n      classParsing: !previousState.classParsing,\n    }));\n    ctx.updateHandler(true);\n  };\n\n  return (\n    <div className={classes.overall}>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"location-parsing\"\n          checked={parse.parse}\n          onChange={parseHandler}\n          disabled={parse.parseDisabled}\n        />\n        <label htmlFor=\"location-parsing\">\n          Location parsing (EPI Gijón)\n        </label>\n      </div>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"experimental-parsing\"\n          checked={experimental.experimental}\n          onChange={experimentalHandler}\n          disabled={experimental.experimentalDisabled}\n        />\n        <label htmlFor=\"experimental-parsing\">\n          Experimental location parsing (EPI Gijón)\n        </label>\n      </div>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"class-parsing\"\n          checked={classParse.classParsing}\n          onChange={classParsingHandler}\n        />\n        <label htmlFor=\"class-parsing\">Class type parsing</label>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkboxes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
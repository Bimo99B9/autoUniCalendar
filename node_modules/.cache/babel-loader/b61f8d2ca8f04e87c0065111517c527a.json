{"ast":null,"code":"var _jsxFileName = \"/home/mier/git/epiCalendar/src/components/Settings/Saver.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useInput from \"../../hooks/use-input\";\nimport classes from \"./Saver.module.css\";\nimport SettingsContext from \"../../store/settings-context\"; // Component to set the name of the filename\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Saver = props => {\n  _s();\n\n  // Access the settings context\n  const ctx = React.useContext(SettingsContext); // useInput hook to get the name of filename\n\n  const {\n    value: enteredName,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.length > 0); // Function to set the name of the file\n\n  const nameHandlerValue = name => {\n    if (name.target.value.trim().length > 0) {\n      nameChangeHandler(name);\n      props.onSave(name.target.value);\n    } else if (name.target.value === \"\") {\n      // console.log(\"Name is empty\");\n      nameChangeHandler(name);\n      props.onSave(\"Calendario\");\n    }\n  };\n\n  const handleExtensionChange = event => {\n    ctx.extensionHandler(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.saveas,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"saveAs\",\n        name: \"filename\",\n        onChange: nameHandlerValue,\n        onBlur: nameBlurHandler,\n        value: enteredName,\n        placeholder: \"Calendario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.extension,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: ctx.extension,\n          onChange: handleExtensionChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \".ics\",\n            children: \".ics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \".csv\",\n            children: \".csv\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Saver, \"AUbImIgE+Uz1plvDcyoo8yOGxPU=\", false, function () {\n  return [useInput];\n});\n\n_c = Saver;\nexport default Saver;\n\nvar _c;\n\n$RefreshReg$(_c, \"Saver\");","map":{"version":3,"names":["React","useInput","classes","SettingsContext","Saver","props","ctx","useContext","value","enteredName","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","length","nameHandlerValue","name","target","trim","onSave","handleExtensionChange","event","extensionHandler","saveas","form","extension"],"sources":["/home/mier/git/epiCalendar/src/components/Settings/Saver.js"],"sourcesContent":["import React from \"react\";\n\nimport useInput from \"../../hooks/use-input\";\nimport classes from \"./Saver.module.css\";\n\nimport SettingsContext from \"../../store/settings-context\";\n\n// Component to set the name of the filename\nconst Saver = (props) => {\n  // Access the settings context\n  const ctx = React.useContext(SettingsContext);\n\n  // useInput hook to get the name of filename\n  const {\n    value: enteredName,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n  } = useInput((value) => value.length > 0);\n\n  // Function to set the name of the file\n  const nameHandlerValue = (name) => {\n    if (name.target.value.trim().length > 0) {\n      nameChangeHandler(name);\n      props.onSave(name.target.value);\n    } else if (name.target.value === \"\") {\n      // console.log(\"Name is empty\");\n      nameChangeHandler(name);\n      props.onSave(\"Calendario\");\n    }\n  };\n\n  const handleExtensionChange = (event) => {\n    ctx.extensionHandler(event.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.saveas}>\n        <h3>Filename</h3>\n      </div>\n      <div className={classes.form}>\n        <input\n          type=\"text\"\n          id=\"saveAs\"\n          name=\"filename\"\n          onChange={nameHandlerValue}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n          placeholder=\"Calendario\"\n        />\n        <div className={classes.extension}>\n          <select value={ctx.extension} onChange={handleExtensionChange}>\n            <option value=\".ics\">.ics</option>\n            <option value=\".csv\">.csv</option>\n          </select>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Saver;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,OAAOC,eAAP,MAA4B,8BAA5B,C,CAEA;;;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;EAAA;;EACvB;EACA,MAAMC,GAAG,GAAGN,KAAK,CAACO,UAAN,CAAiBJ,eAAjB,CAAZ,CAFuB,CAIvB;;EACA,MAAM;IACJK,KAAK,EAAEC,WADH;IAEJC,kBAAkB,EAAEC,iBAFhB;IAGJC,gBAAgB,EAAEC;EAHd,IAIFZ,QAAQ,CAAEO,KAAD,IAAWA,KAAK,CAACM,MAAN,GAAe,CAA3B,CAJZ,CALuB,CAWvB;;EACA,MAAMC,gBAAgB,GAAIC,IAAD,IAAU;IACjC,IAAIA,IAAI,CAACC,MAAL,CAAYT,KAAZ,CAAkBU,IAAlB,GAAyBJ,MAAzB,GAAkC,CAAtC,EAAyC;MACvCH,iBAAiB,CAACK,IAAD,CAAjB;MACAX,KAAK,CAACc,MAAN,CAAaH,IAAI,CAACC,MAAL,CAAYT,KAAzB;IACD,CAHD,MAGO,IAAIQ,IAAI,CAACC,MAAL,CAAYT,KAAZ,KAAsB,EAA1B,EAA8B;MACnC;MACAG,iBAAiB,CAACK,IAAD,CAAjB;MACAX,KAAK,CAACc,MAAN,CAAa,YAAb;IACD;EACF,CATD;;EAWA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;IACvCf,GAAG,CAACgB,gBAAJ,CAAqBD,KAAK,CAACJ,MAAN,CAAaT,KAAlC;EACD,CAFD;;EAIA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,wBACE;MAAK,SAAS,EAAEN,OAAO,CAACqB,MAAxB;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,SAAS,EAAErB,OAAO,CAACsB,IAAxB;MAAA,wBACE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,QAFL;QAGE,IAAI,EAAC,UAHP;QAIE,QAAQ,EAAET,gBAJZ;QAKE,MAAM,EAAEF,eALV;QAME,KAAK,EAAEJ,WANT;QAOE,WAAW,EAAC;MAPd;QAAA;QAAA;QAAA;MAAA,QADF,eAUE;QAAK,SAAS,EAAEP,OAAO,CAACuB,SAAxB;QAAA,uBACE;UAAQ,KAAK,EAAEnB,GAAG,CAACmB,SAAnB;UAA8B,QAAQ,EAAEL,qBAAxC;UAAA,wBACE;YAAQ,KAAK,EAAC,MAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAQ,KAAK,EAAC,MAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAVF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CAnDD;;GAAMhB,K;UASAH,Q;;;KATAG,K;AAqDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}
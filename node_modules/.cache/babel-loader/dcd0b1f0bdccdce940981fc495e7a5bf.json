{"ast":null,"code":"import _objectSpread from\"/home/mier/git/epiCalendar/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/mier/git/epiCalendar/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useEffect,useState}from\"react\";// Default values for the context\nimport{jsx as _jsx}from\"react/jsx-runtime\";export var DEFAULT_FILENAME=\"Calendario\";export var DEFAULT_UNIVERSITY=\"epi\";// Context for the settings of the app (better autocomplete)\nvar SettingsContext=/*#__PURE__*/createContext({check:function check(name){},university:\"\",saveNameHandler:function saveNameHandler(name){},saveas:\"\",parse:true,classParsing:true,parseHandler:function parseHandler(state){},classParsingHandler:function classParsingHandler(state){},update:false,updateHandler:function updateHandler(state){},extension:\".ics\",extensionHandler:function extensionHandler(extension){}});export var SettingsProvider=function SettingsProvider(props){var _useState=useState(\"epi\"),_useState2=_slicedToArray(_useState,2),university=_useState2[0],setUniversity=_useState2[1];// State for the university\nvar _useState3=useState(\"Calendario\"),_useState4=_slicedToArray(_useState3,2),saveas=_useState4[0],setSaveas=_useState4[1];// State for the filename\n// States for checkboxes\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),update=_useState6[0],setUpdate=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isCheckedParsing=_useState8[0],setIsCheckedParsing=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),isClassParsing=_useState10[0],setIsClassParsing=_useState10[1];// State for the extension of the file\nvar _useState11=useState(\".ics\"),_useState12=_slicedToArray(_useState11,2),extension=_useState12[0],setExtension=_useState12[1];// More general states which are used in the form to save the settings\nvar _useState13=useState({parse:false,classParsing:true,parseDisabled:true,classParsingDisabled:false}),_useState14=_slicedToArray(_useState13,2),oviedoCheck=_useState14[0],setOviedoCheck=_useState14[1];var _useState15=useState({parse:true,classParsing:true,parseDisabled:false,classParsingDisabled:false}),_useState16=_slicedToArray(_useState15,2),epiCheck=_useState16[0],setEpiCheck=_useState16[1];// useEffect hooks to update the states of the checkboxes\nuseEffect(function(){if(university===\"epi\"){setEpiCheck(function(existingValues){return _objectSpread(_objectSpread({},existingValues),{},{parse:isCheckedParsing,parseDisabled:false,classParsingDisabled:false});});}setUpdate(false);},[isCheckedParsing]);useEffect(function(){if(university===\"uo\"){setOviedoCheck(function(previousState){return _objectSpread(_objectSpread({},previousState),{},{classParsing:isClassParsing});});}else{setEpiCheck(function(previousState){return _objectSpread(_objectSpread({},previousState),{},{classParsing:isClassParsing});});}setUpdate(false);},[isClassParsing]);// Function to set the university state\nvar checkHandler=function checkHandler(name){setUniversity(name);};// Function to set the filename state\nvar saveNameHandler=function saveNameHandler(name){setSaveas(name);};// Functions to set the checkboxes state\nvar parseHandler=function parseHandler(state){setIsCheckedParsing(state);};var classParsingHandler=function classParsingHandler(state){setIsClassParsing(state);};// Function to set the update state\nvar updateHandler=function updateHandler(state){setUpdate(state);};// Function to set the extension state\nvar extensionHandler=function extensionHandler(extension){setExtension(extension);};return/*#__PURE__*/_jsx(SettingsContext.Provider,{value:{check:checkHandler,university:university,saveNameHandler:saveNameHandler,saveas:saveas,parseHandler:parseHandler,classParsingHandler:classParsingHandler,oviedoCheck:oviedoCheck,epiCheck:epiCheck,update:update,updateHandler:updateHandler,extension:extension,extensionHandler:extensionHandler},children:props.children});};export default SettingsContext;","map":{"version":3,"names":["React","createContext","useEffect","useState","DEFAULT_FILENAME","DEFAULT_UNIVERSITY","SettingsContext","check","name","university","saveNameHandler","saveas","parse","classParsing","parseHandler","state","classParsingHandler","update","updateHandler","extension","extensionHandler","SettingsProvider","props","setUniversity","setSaveas","setUpdate","isCheckedParsing","setIsCheckedParsing","isClassParsing","setIsClassParsing","setExtension","parseDisabled","classParsingDisabled","oviedoCheck","setOviedoCheck","epiCheck","setEpiCheck","existingValues","previousState","checkHandler","children"],"sources":["/home/mier/git/epiCalendar/src/store/settings-context.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\n\n// Default values for the context\nexport const DEFAULT_FILENAME = \"Calendario\";\nexport const DEFAULT_UNIVERSITY = \"epi\";\n\n// Context for the settings of the app (better autocomplete)\nconst SettingsContext = createContext({\n  check: (name) => {},\n  university: \"\",\n  saveNameHandler: (name) => {},\n  saveas: \"\",\n  parse: true,\n  classParsing: true,\n  parseHandler: (state) => {},\n  classParsingHandler: (state) => {},\n  update: false,\n  updateHandler: (state) => {},\n  extension: \".ics\",\n  extensionHandler: (extension) => {},\n});\n\nexport const SettingsProvider = (props) => {\n  const [university, setUniversity] = useState(\"epi\"); // State for the university\n  const [saveas, setSaveas] = useState(\"Calendario\"); // State for the filename\n\n  // States for checkboxes\n  const [update, setUpdate] = useState(false);\n  const [isCheckedParsing, setIsCheckedParsing] = useState(true);\n  const [isClassParsing, setIsClassParsing] = useState(true);\n\n  // State for the extension of the file\n  const [extension, setExtension] = useState(\".ics\");\n\n  // More general states which are used in the form to save the settings\n  const [oviedoCheck, setOviedoCheck] = useState({\n    parse: false,\n    classParsing: true,\n    parseDisabled: true,\n    classParsingDisabled: false,\n  });\n  const [epiCheck, setEpiCheck] = useState({\n    parse: true,\n    classParsing: true,\n    parseDisabled: false,\n    classParsingDisabled: false,\n  });\n\n  // useEffect hooks to update the states of the checkboxes\n  useEffect(() => {\n    if (university === \"epi\") {\n      setEpiCheck((existingValues) => ({\n        ...existingValues,\n        parse: isCheckedParsing,\n        parseDisabled: false,\n        classParsingDisabled: false,\n      }));\n    }\n    setUpdate(false);\n  }, [isCheckedParsing]);\n  useEffect(() => {\n    if (university === \"uo\") {\n      setOviedoCheck((previousState) => ({\n        ...previousState,\n        classParsing: isClassParsing,\n      }));\n    } else {\n      setEpiCheck((previousState) => ({\n        ...previousState,\n        classParsing: isClassParsing,\n      }));\n    }\n    setUpdate(false);\n  }, [isClassParsing]);\n\n  // Function to set the university state\n  const checkHandler = (name) => {\n    setUniversity(name);\n  };\n\n  // Function to set the filename state\n  const saveNameHandler = (name) => {\n    setSaveas(name);\n  };\n\n  // Functions to set the checkboxes state\n  const parseHandler = (state) => {\n    setIsCheckedParsing(state);\n  };\n  const classParsingHandler = (state) => {\n    setIsClassParsing(state);\n  };\n\n  // Function to set the update state\n  const updateHandler = (state) => {\n    setUpdate(state);\n  };\n\n  // Function to set the extension state\n  const extensionHandler = (extension) => {\n    setExtension(extension);\n  };\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        check: checkHandler,\n        university: university,\n        saveNameHandler: saveNameHandler,\n        saveas: saveas,\n        parseHandler: parseHandler,\n        classParsingHandler: classParsingHandler,\n        oviedoCheck: oviedoCheck,\n        epiCheck: epiCheck,\n        update: update,\n        updateHandler: updateHandler,\n        extension: extension,\n        extensionHandler: extensionHandler,\n      }}\n    >\n      {props.children}\n    </SettingsContext.Provider>\n  );\n};\n\nexport default SettingsContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
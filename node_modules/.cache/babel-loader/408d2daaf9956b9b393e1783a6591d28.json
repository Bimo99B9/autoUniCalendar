{"ast":null,"code":"import React,{useState,useEffect,useContext}from\"react\";import classes from\"./Checkboxes.module.css\";import SettingsContext from\"../../store/settings-context\";// Component that represents the 3 checkboxes\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Checkboxes=function Checkboxes(){// Access the settings context\nvar ctx=useContext(SettingsContext);// State for the checkboxes\n// const [parse, setParse] = useState({ parse: true, parseDisabled: false });\n// const [classParse, setClassParse] = useState({\n//   classParsing: true,\n//   classParsingDisabled: false,\n// });\n// No dependecies as we want the checkboxes to be updated only on first render\n// useEffect(() => {\n//   if (ctx.university === \"uo\") {\n//     setParse({\n//       parse: ctx.oviedoCheck.parse,\n//       parseDisabled: ctx.oviedoCheck.parseDisabled,\n//     });\n//     setClassParse({\n//       classParsing: ctx.oviedoCheck.classParsing,\n//       classParsingDisabled: ctx.oviedoCheck.classParsingDisabled,\n//     });\n//   } else if (ctx.university === \"epi\") {\n//     setParse({\n//       parse: ctx.epiCheck.parse,\n//       parseDisabled: ctx.epiCheck.parseDisabled,\n//     });\n//     setClassParse({\n//       classParsing: ctx.epiCheck.classParsing,\n//       classParsingDisabled: ctx.epiCheck.classParsingDisabled,\n//     });\n//   }\n// }, [ctx.university, ctx.update]);\n// // Effect for updating the checkboxes\n// useEffect(() => {\n//   ctx.parseHandler(parse.parse);\n//   ctx.classParsingHandler(classParse.classParsing);\n// }, [parse.parse, classParse.classParsing]);\n// Function that handles the checkbox change (parse or location)\nvar parseHandler=function parseHandler(){ctx.parseHandler(!ctx.parse);ctx.updateHandler(true);};// Function that handles the checkbox change (class-type or class-type)\nvar classParsingHandler=function classParsingHandler(){ctx.classParsingHandler(!ctx.classParsing);ctx.updateHandler(true);};return/*#__PURE__*/_jsxs(\"div\",{className:classes.overall,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"location-parsing\"// checked={parse.parse}\n,checked:ctx.parse,onChange:parseHandler}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"location-parsing\",children:\"Location parsing (recommended for EPI Gij\\xF3n)\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"class-parsing\"// checked={classParse.classParsing}\n,checked:ctx.classParsing,onChange:classParsingHandler}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"class-parsing\",children:\"Class type parsing\"})]})]});};export default Checkboxes;","map":{"version":3,"names":["React","useState","useEffect","useContext","classes","SettingsContext","Checkboxes","ctx","parseHandler","parse","updateHandler","classParsingHandler","classParsing","overall"],"sources":["/home/mier/git/epiCalendar/src/components/Settings/Checkboxes.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\n\nimport classes from \"./Checkboxes.module.css\";\nimport SettingsContext from \"../../store/settings-context\";\n\n// Component that represents the 3 checkboxes\nconst Checkboxes = () => {\n  // Access the settings context\n  const ctx = useContext(SettingsContext);\n\n  // State for the checkboxes\n  // const [parse, setParse] = useState({ parse: true, parseDisabled: false });\n  // const [classParse, setClassParse] = useState({\n  //   classParsing: true,\n  //   classParsingDisabled: false,\n  // });\n\n  // No dependecies as we want the checkboxes to be updated only on first render\n  // useEffect(() => {\n  //   if (ctx.university === \"uo\") {\n  //     setParse({\n  //       parse: ctx.oviedoCheck.parse,\n  //       parseDisabled: ctx.oviedoCheck.parseDisabled,\n  //     });\n  //     setClassParse({\n  //       classParsing: ctx.oviedoCheck.classParsing,\n  //       classParsingDisabled: ctx.oviedoCheck.classParsingDisabled,\n  //     });\n  //   } else if (ctx.university === \"epi\") {\n  //     setParse({\n  //       parse: ctx.epiCheck.parse,\n  //       parseDisabled: ctx.epiCheck.parseDisabled,\n  //     });\n  //     setClassParse({\n  //       classParsing: ctx.epiCheck.classParsing,\n  //       classParsingDisabled: ctx.epiCheck.classParsingDisabled,\n  //     });\n  //   }\n  // }, [ctx.university, ctx.update]);\n\n  // // Effect for updating the checkboxes\n  // useEffect(() => {\n  //   ctx.parseHandler(parse.parse);\n  //   ctx.classParsingHandler(classParse.classParsing);\n  // }, [parse.parse, classParse.classParsing]);\n\n  // Function that handles the checkbox change (parse or location)\n  const parseHandler = () => {\n    ctx.parseHandler(!ctx.parse);\n    ctx.updateHandler(true);\n  };\n\n  // Function that handles the checkbox change (class-type or class-type)\n  const classParsingHandler = () => {\n    ctx.classParsingHandler(!ctx.classParsing);\n    ctx.updateHandler(true);\n  };\n\n  return (\n    <div className={classes.overall}>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"location-parsing\"\n          // checked={parse.parse}\n          checked={ctx.parse}\n          onChange={parseHandler}\n        />\n        <label htmlFor=\"location-parsing\">Location parsing (recommended for EPI Gij√≥n)</label>\n      </div>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"class-parsing\"\n          // checked={classParse.classParsing}\n          checked={ctx.classParsing}\n          onChange={classParsingHandler}\n        />\n        <label htmlFor=\"class-parsing\">Class type parsing</label>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkboxes;\n"],"mappings":"AAAA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,KAAuD,OAAvD,CAEA,MAAOC,QAAP,KAAoB,yBAApB,CACA,MAAOC,gBAAP,KAA4B,8BAA5B,CAEA;wFACA,GAAMC,WAAU,CAAG,QAAbA,WAAa,EAAM,CACvB;AACA,GAAMC,IAAG,CAAGJ,UAAU,CAACE,eAAD,CAAtB,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA,GAAMG,aAAY,CAAG,QAAfA,aAAe,EAAM,CACzBD,GAAG,CAACC,YAAJ,CAAiB,CAACD,GAAG,CAACE,KAAtB,EACAF,GAAG,CAACG,aAAJ,CAAkB,IAAlB,EACD,CAHD,CAKA;AACA,GAAMC,oBAAmB,CAAG,QAAtBA,oBAAsB,EAAM,CAChCJ,GAAG,CAACI,mBAAJ,CAAwB,CAACJ,GAAG,CAACK,YAA7B,EACAL,GAAG,CAACG,aAAJ,CAAkB,IAAlB,EACD,CAHD,CAKA,mBACE,aAAK,SAAS,CAAEN,OAAO,CAACS,OAAxB,wBACE,oCACE,cACE,IAAI,CAAC,UADP,CAEE,EAAE,CAAC,kBACH;AAHF,CAIE,OAAO,CAAEN,GAAG,CAACE,KAJf,CAKE,QAAQ,CAAED,YALZ,EADF,cAQE,cAAO,OAAO,CAAC,kBAAf,6DARF,GADF,cAWE,oCACE,cACE,IAAI,CAAC,UADP,CAEE,EAAE,CAAC,eACH;AAHF,CAIE,OAAO,CAAED,GAAG,CAACK,YAJf,CAKE,QAAQ,CAAED,mBALZ,EADF,cAQE,cAAO,OAAO,CAAC,eAAf,gCARF,GAXF,GADF,CAwBD,CA5ED,CA8EA,cAAeL,WAAf"},"metadata":{},"sourceType":"module"}
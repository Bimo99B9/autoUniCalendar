{"ast":null,"code":"import _objectSpread from \"/home/mier/git/epiCalendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/mier/git/epiCalendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/mier/git/epiCalendar/src/store/settings-context.js\";\n\nimport React, { createContext, useEffect, useState } from \"react\"; // Default values for the context\n\nexport var DEFAULT_FILENAME = \"Calendario\";\nexport var DEFAULT_UNIVERSITY = \"epi\"; // Context for the settings of the app (better autocomplete)\n\nvar SettingsContext = createContext({\n  check: function check(name) {},\n  university: \"\",\n  saveNameHandler: function saveNameHandler(name) {},\n  saveas: \"\",\n  parse: true,\n  experimental: true,\n  classParsing: true,\n  parseHandler: function parseHandler(state) {},\n  experimentalHandler: function experimentalHandler(state) {},\n  classParsingHandler: function classParsingHandler(state) {},\n  update: false,\n  updateHandler: function updateHandler(state) {}\n});\nexport var SettingsProvider = function SettingsProvider(props) {\n  var _useState = useState(\"epi\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      university = _useState2[0],\n      setUniversity = _useState2[1]; // State for the university\n\n\n  var _useState3 = useState(\"Calendario\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      saveas = _useState4[0],\n      setSaveas = _useState4[1]; // State for the filename\n  // States for checkboxes\n\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      update = _useState6[0],\n      setUpdate = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isCheckedParsing = _useState8[0],\n      setIsCheckedParsing = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isCheckedExperimental = _useState10[0],\n      setIsCheckedExperimental = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isClassParsing = _useState12[0],\n      setIsClassParsing = _useState12[1]; // More general states which are used in the form to save the settings\n\n\n  var _useState13 = useState({\n    parse: false,\n    experimental: false,\n    classParsing: true,\n    parseDisabled: true,\n    experimentalDisabled: true,\n    classParsingDisabled: false\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      oviedoCheck = _useState14[0],\n      setOviedoCheck = _useState14[1];\n\n  var _useState15 = useState({\n    parse: true,\n    experimental: true,\n    classParsing: true,\n    parseDisabled: false,\n    experimentalDisabled: false,\n    classParsingDisabled: false\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      epiCheck = _useState16[0],\n      setEpiCheck = _useState16[1]; // useEffect hooks to update the states of the checkboxes\n\n\n  useEffect(function () {\n    if (university === \"epi\") {\n      setEpiCheck(function (existingValues) {\n        return _objectSpread({}, existingValues, {\n          parse: isCheckedParsing,\n          parseDisabled: false,\n          experimental: isCheckedParsing === true ? true : false,\n          experimentalDisabled: isCheckedParsing === true ? false : true,\n          classParsingDisabled: false\n        });\n      });\n    }\n\n    setUpdate(false);\n  }, [isCheckedParsing]);\n  useEffect(function () {\n    console.log(\"entra\");\n\n    if (university === \"epi\") {\n      setEpiCheck(function (previousState) {\n        return _objectSpread({}, previousState, {\n          experimental: isCheckedParsing === true ? isCheckedExperimental : false\n        });\n      });\n    }\n\n    setUpdate(false);\n  }, [isCheckedExperimental]);\n  useEffect(function () {\n    console.log(\"entra en classParsing\");\n\n    if (university === \"uo\") {\n      setOviedoCheck(function (previousState) {\n        return _objectSpread({}, previousState, {\n          classParsing: isClassParsing\n        });\n      });\n    } else {\n      setEpiCheck(function (previousState) {\n        return _objectSpread({}, previousState, {\n          classParsing: isClassParsing\n        });\n      });\n    }\n\n    setUpdate(false);\n  }, [isClassParsing]); // Function to set the university state\n\n  var checkHandler = function checkHandler(name) {\n    setUniversity(name);\n  }; // Function to set the filename state\n\n\n  var saveNameHandler = function saveNameHandler(name) {\n    setSaveas(name);\n  }; // Functions to set the checkboxes state\n\n\n  var parseHandler = function parseHandler(state) {\n    setIsCheckedParsing(state);\n  };\n\n  var experimentalHandler = function experimentalHandler(state) {\n    setIsCheckedExperimental(state);\n  };\n\n  var classParsingHandler = function classParsingHandler(state) {\n    setIsClassParsing(state);\n  }; // Function to set the update state\n\n\n  var updateHandler = function updateHandler(state) {\n    setUpdate(state);\n  };\n\n  return /*#__PURE__*/React.createElement(SettingsContext.Provider, {\n    value: {\n      check: checkHandler,\n      university: university,\n      saveNameHandler: saveNameHandler,\n      saveas: saveas,\n      parseHandler: parseHandler,\n      experimentalHandler: experimentalHandler,\n      classParsingHandler: classParsingHandler,\n      oviedoCheck: oviedoCheck,\n      epiCheck: epiCheck,\n      update: update,\n      updateHandler: updateHandler\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport default SettingsContext;","map":{"version":3,"names":["React","createContext","useEffect","useState","DEFAULT_FILENAME","DEFAULT_UNIVERSITY","SettingsContext","check","name","university","saveNameHandler","saveas","parse","experimental","classParsing","parseHandler","state","experimentalHandler","classParsingHandler","update","updateHandler","SettingsProvider","props","setUniversity","setSaveas","setUpdate","isCheckedParsing","setIsCheckedParsing","isCheckedExperimental","setIsCheckedExperimental","isClassParsing","setIsClassParsing","parseDisabled","experimentalDisabled","classParsingDisabled","oviedoCheck","setOviedoCheck","epiCheck","setEpiCheck","existingValues","console","log","previousState","checkHandler","children"],"sources":["/home/mier/git/epiCalendar/src/store/settings-context.js"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\n\n// Default values for the context\nexport const DEFAULT_FILENAME = \"Calendario\";\nexport const DEFAULT_UNIVERSITY = \"epi\";\n\n// Context for the settings of the app (better autocomplete)\nconst SettingsContext = createContext({\n  check: (name) => {},\n  university: \"\",\n  saveNameHandler: (name) => {},\n  saveas: \"\",\n  parse: true,\n  experimental: true,\n  classParsing: true,\n  parseHandler: (state) => {},\n  experimentalHandler: (state) => {},\n  classParsingHandler: (state) => {},\n  update: false,\n  updateHandler: (state) => {},\n});\n\nexport const SettingsProvider = (props) => {\n  const [university, setUniversity] = useState(\"epi\"); // State for the university\n  const [saveas, setSaveas] = useState(\"Calendario\"); // State for the filename\n\n  // States for checkboxes\n  const [update, setUpdate] = useState(false);\n  const [isCheckedParsing, setIsCheckedParsing] = useState(true);\n  const [isCheckedExperimental, setIsCheckedExperimental] = useState(true);\n  const [isClassParsing, setIsClassParsing] = useState(true);\n\n  // More general states which are used in the form to save the settings\n  const [oviedoCheck, setOviedoCheck] = useState({\n    parse: false,\n    experimental: false,\n    classParsing: true,\n    parseDisabled: true,\n    experimentalDisabled: true,\n    classParsingDisabled: false,\n  });\n  const [epiCheck, setEpiCheck] = useState({\n    parse: true,\n    experimental: true,\n    classParsing: true,\n    parseDisabled: false,\n    experimentalDisabled: false,\n    classParsingDisabled: false,\n  });\n\n  // useEffect hooks to update the states of the checkboxes\n  useEffect(() => {\n    if (university === \"epi\") {\n      setEpiCheck((existingValues) => ({\n        ...existingValues,\n        parse: isCheckedParsing,\n        parseDisabled: false,\n        experimental: isCheckedParsing === true ? true : false,\n        experimentalDisabled: isCheckedParsing === true ? false : true,\n        classParsingDisabled: false,\n      }));\n    }\n    setUpdate(false);\n  }, [isCheckedParsing]);\n  useEffect(() => {\n    console.log(\"entra\");\n    if (university === \"epi\") {\n      setEpiCheck((previousState) => ({\n        ...previousState,\n        experimental: isCheckedParsing === true ? isCheckedExperimental : false,\n      }));\n    }\n    setUpdate(false);\n  }, [isCheckedExperimental]);\n  useEffect(() => {\n    console.log(\"entra en classParsing\");\n    if (university === \"uo\") {\n      setOviedoCheck((previousState) => ({\n        ...previousState,\n        classParsing: isClassParsing,\n      }));\n    } else {\n      setEpiCheck((previousState) => ({\n        ...previousState,\n        classParsing: isClassParsing,\n      }));\n    }\n    setUpdate(false);\n  }, [isClassParsing]);\n\n  // Function to set the university state\n  const checkHandler = (name) => {\n    setUniversity(name);\n  };\n\n  // Function to set the filename state\n  const saveNameHandler = (name) => {\n    setSaveas(name);\n  };\n\n  // Functions to set the checkboxes state\n  const parseHandler = (state) => {\n    setIsCheckedParsing(state);\n  };\n  const experimentalHandler = (state) => {\n    setIsCheckedExperimental(state);\n  };\n  const classParsingHandler = (state) => {\n    setIsClassParsing(state);\n  };\n\n  // Function to set the update state\n  const updateHandler = (state) => {\n    setUpdate(state);\n  };\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        check: checkHandler,\n        university: university,\n        saveNameHandler: saveNameHandler,\n        saveas: saveas,\n        parseHandler: parseHandler,\n        experimentalHandler: experimentalHandler,\n        classParsingHandler: classParsingHandler,\n        oviedoCheck: oviedoCheck,\n        epiCheck: epiCheck,\n        update: update,\n        updateHandler: updateHandler,\n      }}\n    >\n      {props.children}\n    </SettingsContext.Provider>\n  );\n};\n\nexport default SettingsContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
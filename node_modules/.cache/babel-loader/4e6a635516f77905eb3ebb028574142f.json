{"ast":null,"code":"import _slicedToArray from \"/home/mier/git/epiCalendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\"; // Custom hook to use the input\n\nvar useInput = function useInput(validateValue) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1]; // State for the entered input value\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isTouched = _useState4[0],\n      setIsTouched = _useState4[1]; // State to check if the input has been touched\n\n\n  var valueIsValid = validateValue(enteredValue); // Check if the input value is valid through the validateValue function\n\n  var hasError = !valueIsValid && isTouched; // Check if the input has an error (if it is not valid and it has been touched)\n  // Function to update the enteredValue of the input\n\n  var valueChangeHandler = function valueChangeHandler(event) {\n    setEnteredValue(event.target.value);\n  }; // Function to update the isTouched state of the input\n\n\n  var inputBlurHandler = function inputBlurHandler() {\n    if (enteredValue.trim().length === 0) {\n      setIsTouched(false);\n    } else {\n      setIsTouched(true);\n    }\n  }; // Reset for the enteredValue and isTouched state\n\n\n  var reset = function reset() {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler: valueChangeHandler,\n    inputBlurHandler: inputBlurHandler,\n    reset: reset\n  };\n};\n\nexport default useInput;","map":{"version":3,"names":["useState","useInput","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","value","inputBlurHandler","trim","length","reset","isValid"],"sources":["/home/mier/git/epiCalendar/src/hooks/use-input.js"],"sourcesContent":["import { useState } from \"react\";\n\n// Custom hook to use the input\nconst useInput = (validateValue) => {\n  const [enteredValue, setEnteredValue] = useState(\"\"); // State for the entered input value\n  const [isTouched, setIsTouched] = useState(false); // State to check if the input has been touched\n\n  const valueIsValid = validateValue(enteredValue); // Check if the input value is valid through the validateValue function\n  const hasError = !valueIsValid && isTouched; // Check if the input has an error (if it is not valid and it has been touched)\n\n  // Function to update the enteredValue of the input\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  // Function to update the isTouched state of the input\n  const inputBlurHandler = () => {\n    if (enteredValue.trim().length === 0) {\n      setIsTouched(false);\n    } else {\n      setIsTouched(true);\n    }\n  };\n\n  // Reset for the enteredValue and isTouched state\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,aAAD,EAAmB;EAAA,gBACMF,QAAQ,CAAC,EAAD,CADd;EAAA;EAAA,IAC3BG,YAD2B;EAAA,IACbC,eADa,kBACoB;;;EADpB,iBAEAJ,QAAQ,CAAC,KAAD,CAFR;EAAA;EAAA,IAE3BK,SAF2B;EAAA,IAEhBC,YAFgB,kBAEiB;;;EAEnD,IAAMC,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC,CAJkC,CAIgB;;EAClD,IAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBF,SAAlC,CALkC,CAKW;EAE7C;;EACA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;IACpCN,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;EACD,CAFD,CARkC,CAYlC;;;EACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;IAC7B,IAAIV,YAAY,CAACW,IAAb,GAAoBC,MAApB,KAA+B,CAAnC,EAAsC;MACpCT,YAAY,CAAC,KAAD,CAAZ;IACD,CAFD,MAEO;MACLA,YAAY,CAAC,IAAD,CAAZ;IACD;EACF,CAND,CAbkC,CAqBlC;;;EACA,IAAMU,KAAK,GAAG,SAARA,KAAQ,GAAM;IAClBZ,eAAe,CAAC,EAAD,CAAf;IACAE,YAAY,CAAC,KAAD,CAAZ;EACD,CAHD;;EAKA,OAAO;IACLM,KAAK,EAAET,YADF;IAELc,OAAO,EAAEV,YAFJ;IAGLC,QAAQ,EAARA,QAHK;IAILC,kBAAkB,EAAlBA,kBAJK;IAKLI,gBAAgB,EAAhBA,gBALK;IAMLG,KAAK,EAALA;EANK,CAAP;AAQD,CAnCD;;AAqCA,eAAef,QAAf"},"metadata":{},"sourceType":"module"}
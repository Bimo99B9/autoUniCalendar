{"version":3,"sources":["components/Form/Form.module.css","components/UI/Modal.module.css","components/Settings/Saver.module.css","components/Settings/Settings.module.css","components/Form/HeaderSettingsButton.module.css","components/Settings/Options.module.css","components/Settings/Checkboxes.module.css","components/Settings/RadioButtons.module.css","hooks/use-input.js","components/Form/HeaderSettingsButton.js","store/settings-context.js","components/Form/Form.js","components/UI/Modal.js","components/Settings/Checkboxes.js","components/Settings/RadioButtons.js","components/Settings/Options.js","components/Settings/Saver.js","components/Settings/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","form","control","btn-anim1","btn-anim2","btn-anim3","btn-anim4","actions","invalid","error","backdrop","modal","slide-down","saveas","extension","total","overall","checkboxes","buttons","button--alt","button","icon","badge","bump","options","separation","useInput","validateValue","_useState","useState","_useState2","Object","slicedToArray","enteredValue","setEnteredValue","_useState3","_useState4","isTouched","setIsTouched","valueIsValid","value","isValid","hasError","valueChangeHandler","event","target","inputBlurHandler","trim","length","reset","HeaderSettingsButton","props","btnIsHighlighted","btnClasses","concat","classes","react_default","a","createElement","className","onClick","SettingsContext","createContext","check","name","university","saveNameHandler","parse","experimental","classParsing","parseHandler","state","experimentalHandler","classParsingHandler","update","updateHandler","SettingsProvider","setUniversity","setSaveas","_useState5","_useState6","setUpdate","_useState7","_useState8","isCheckedParsing","setIsCheckedParsing","_useState9","_useState10","isCheckedExperimental","setIsCheckedExperimental","_useState11","_useState12","isClassParsing","setIsClassParsing","_useState13","parseDisabled","experimentalDisabled","classParsingDisabled","_useState14","oviedoCheck","setOviedoCheck","_useState15","_useState16","epiCheck","setEpiCheck","useEffect","existingValues","objectSpread","console","log","previousState","Provider","children","Form","ctx","React","useContext","_useInput","charAt","enteredCode","codeIsValid","codeHasError","codeChangeHandler","codeBlurHandler","codeReset","formIsValid","formSubmissionHandler","preventDefault","document","getElementById","submit","codeInputClasses","Fragment","method","onSubmit","id","htmlFor","type","onChange","onBlur","placeholder","Form_HeaderSettingsButton","onShowSettings","disabled","Backdrop","onClose","ModalOverlay","content","portalElement","Modal","react","ReactDOM","createPortal","Modal_Backdrop","Modal_ModalOverlay","Checkboxes","setParse","setExperimental","classParse","setClassParse","checked","universityList","label","RadioButtons","handleChange","e","map","x","key","defaultChecked","Options","Settings_RadioButtons","onCheck","style","color","backgroundColor","borderColor","height","fontWeight","width","marginTop","marginLeft","marginRight","borderRadius","Settings_Checkboxes","Saver","enteredName","nameChangeHandler","nameBlurHandler","onSave","Settings","UI_Modal","Settings_Saver","Settings_Options","App","showSettings","setShowSettings","app","components_Settings_Settings","components_Form_Form","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","createRoot","render","settings_context_SettingsProvider","src_App"],"mappings":"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","file":"static/js/main.201a6e90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3N9xP\",\"control\":\"Form_control__2Hd3y\",\"btn-anim1\":\"Form_btn-anim1__3_-pr\",\"btn-anim2\":\"Form_btn-anim2__wFzsa\",\"btn-anim3\":\"Form_btn-anim3__2vJJx\",\"btn-anim4\":\"Form_btn-anim4__1e_AM\",\"actions\":\"Form_actions__2_19Y\",\"invalid\":\"Form_invalid__1zbxW\",\"error\":\"Form_error__24IC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3bwxq\",\"modal\":\"Modal_modal__1pZmX\",\"slide-down\":\"Modal_slide-down__1H0HJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Saver_form__3XrKa\",\"invalid\":\"Saver_invalid__1dWqF\",\"error\":\"Saver_error__35SK9\",\"saveas\":\"Saver_saveas__1P7e9\",\"extension\":\"Saver_extension__3WZap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Settings_form__1Qk8i\",\"total\":\"Settings_total__1XkVL\",\"overall\":\"Settings_overall__4QOs4\",\"checkboxes\":\"Settings_checkboxes__19b_p\",\"buttons\":\"Settings_buttons__2eU31\",\"button--alt\":\"Settings_button--alt__uOqtR\",\"button\":\"Settings_button__13X5e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"HeaderSettingsButton_icon__1Y1Bf\",\"badge\":\"HeaderSettingsButton_badge__1lrE1\",\"bump\":\"HeaderSettingsButton_bump__1uSXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Options_options__2hcQg\",\"separation\":\"Options_separation__3vDns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overall\":\"Checkboxes_overall__12sVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RadioButtons_form__1GDBR\"};","import { useState } from \"react\";\n\nconst useInput = (validateValue) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = () => {\n    if (enteredValue.trim().length === 0) {\n      setIsTouched(false);\n    } else {\n      setIsTouched(true);\n    }\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n","import React, { useState } from \"react\";\n\n//import CartContext from \"../../store/cart-context\";\nimport classes from \"./HeaderSettingsButton.module.css\";\n\nconst HeaderSettingsButton = (props) => {\n  const [btnIsHighlighted] = useState(false);\n\n  const btnClasses = `${classes.button} ${\n    btnIsHighlighted ? classes.bump : \"\"\n  }`;\n\n  return (\n    <button className={btnClasses} onClick={props.onClick}>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      ⚙\n    </button>\n  );\n};\n\nexport default HeaderSettingsButton;\n","import React, { createContext, useEffect, useState } from \"react\";\n\nexport const DEFAULT_FILENAME = \"Calendario\";\nexport const DEFAULT_UNIVERSITY = \"epi\";\n\nconst SettingsContext = createContext({\n  check: (name) => {},\n  university: \"\",\n  saveNameHandler: (name) => {},\n  saveas: \"\",\n  parse: true,\n  experimental: true,\n  classParsing: true,\n  parseHandler: (state) => {},\n  experimentalHandler: (state) => {},\n  classParsingHandler: (state) => {},\n  update: false,\n  updateHandler: (state) => {},\n  // isTouched: false,\n  // isTouchHandler: (state) => {},\n});\n\nexport const SettingsProvider = (props) => {\n  const [university, setUniversity] = useState(\"epi\");\n  const [saveas, setSaveas] = useState(\"Calendario\");\n  // States for checkboxes\n  // const [isTouched, setIsTouched] = useState(false);\n  const [update, setUpdate] = useState(false);\n  const [isCheckedParsing, setIsCheckedParsing] = useState(true);\n  const [isCheckedExperimental, setIsCheckedExperimental] = useState(true);\n  const [isClassParsing, setIsClassParsing] = useState(true);\n\n  // Cambio en estado de checkboxes para intentar hacer un estado por universidad\n  const [oviedoCheck, setOviedoCheck] = useState({\n    parse: false,\n    experimental: false,\n    classParsing: true,\n    parseDisabled: true,\n    experimentalDisabled: true,\n    classParsingDisabled: false,\n  });\n\n  const [epiCheck, setEpiCheck] = useState({\n    parse: true,\n    experimental: true,\n    classParsing: true,\n    parseDisabled: false,\n    experimentalDisabled: false,\n    classParsingDisabled: false,\n  });\n\n  useEffect(() => {\n    if (university === \"epi\") {\n      setEpiCheck((existingValues) => ({\n        ...existingValues,\n        parse: isCheckedParsing,\n        parseDisabled: false,\n        experimental: isCheckedParsing === true ? true : false,\n        experimentalDisabled: isCheckedParsing === true ? false : true,\n        classParsingDisabled: false,\n      }));\n    }\n    setUpdate(false);\n  }, [isCheckedParsing]);\n\n  useEffect(() => {\n    console.log(\"entra\");\n    if (university === \"epi\") {\n      setEpiCheck((previousState) => ({\n        ...previousState,\n        experimental: isCheckedParsing === true ? isCheckedExperimental : false,\n      }));\n    }\n    setUpdate(false);\n  }, [isCheckedExperimental]);\n\n  useEffect(() => {\n    console.log(\"entra en classParsing\");\n    if (university === \"uo\") {\n      setOviedoCheck((previousState) => ({\n        ...previousState,\n        classParsing: isClassParsing,\n      }));\n    } else {\n      setEpiCheck((previousState) => ({\n        ...previousState,\n        classParsing: isClassParsing,\n      }));\n    }\n    setUpdate(false);\n  }, [isClassParsing]);\n\n  const checkHandler = (name) => {\n    setUniversity(name);\n  };\n\n  const saveNameHandler = (name) => {\n    setSaveas(name);\n  };\n\n  const parseHandler = (state) => {\n    setIsCheckedParsing(state);\n  };\n\n  const experimentalHandler = (state) => {\n    setIsCheckedExperimental(state);\n  };\n\n  const classParsingHandler = (state) => {\n    // console.log(state);\n    // if (university === \"uo\") {\n    //   setOviedoCheck({\n    //     parse: false,\n    //     experimental: false,\n    //     classParsing: state,\n    //     parseDisabled: true,\n    //     experimentalDisabled: true,\n    //     classParsingDisabled: false,\n    //   });\n    // } else {\n    //   setEpiCheck({\n    //     parse: epiCheck.parse,\n    //     experimental: epiCheck.experimental,\n    //     classParsing: state,\n    //     parseDisabled: false,\n    //     experimentalDisabled: false,\n    //     classParsingDisabled: false,\n    //   });\n    // }\n    setIsClassParsing(state);\n  };\n\n  // const isTouchedHandler = (state) => {\n  //   setIsTouched(state);\n  // };\n\n  const updateHandler = (state) => {\n    setUpdate(state);\n  };\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        check: checkHandler,\n        university: university,\n        saveNameHandler: saveNameHandler,\n        saveas: saveas,\n        // parse: isCheckedParsing,\n        // experimental: isCheckedExperimental,\n        // classParsing: isClassParsing,\n        parseHandler: parseHandler,\n        experimentalHandler: experimentalHandler,\n        classParsingHandler: classParsingHandler,\n        // isTouched: isTouched,\n        // isTouchHandler: isTouchedHandler,\n        oviedoCheck: oviedoCheck,\n        epiCheck: epiCheck,\n        update: update,\n        updateHandler: updateHandler,\n      }}\n    >\n      {props.children}\n    </SettingsContext.Provider>\n  );\n};\n\nexport default SettingsContext;\n","import useInput from \"../../hooks/use-input\";\nimport HeaderSettingsButton from \"./HeaderSettingsButton\";\nimport React from \"react\";\n\nimport SettingsContext from \"../../store/settings-context\";\nimport classes from \"./Form.module.css\";\nimport {\n  DEFAULT_FILENAME,\n  DEFAULT_UNIVERSITY,\n} from \"../../store/settings-context\";\n\nconst Form = (props) => {\n  const ctx = React.useContext(SettingsContext);\n\n  const {\n    value: enteredCode,\n    isValid: codeIsValid,\n    hasError: codeHasError,\n    valueChangeHandler: codeChangeHandler,\n    inputBlurHandler: codeBlurHandler,\n    reset: codeReset,\n  } = useInput(\n    (value) =>\n      value.length === 37 &&\n      value.charAt(0) === \"0\" &&\n      value.charAt(1) === \"0\" &&\n      value.charAt(2) === \"0\" &&\n      value.charAt(3) === \"0\" &&\n      value.charAt(27) === \":\" &&\n      value.charAt(28) === \"1\" &&\n      value.charAt(29) === \"d\"\n  );\n\n  let formIsValid = false;\n\n  if (codeIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    if (!codeIsValid) {\n      console.log(\"Code is not valid\");\n      return;\n    }\n\n    document.getElementById(\"form\").submit();\n    ctx.saveNameHandler(DEFAULT_FILENAME);\n    ctx.check(DEFAULT_UNIVERSITY);\n    codeReset();\n  };\n\n  const codeInputClasses = `${classes.form} ${\n    codeHasError ? classes.invalid : \"\"\n  }`;\n\n  return (\n    <React.Fragment>\n      <form method=\"post\" onSubmit={formSubmissionHandler} id=\"form\">\n        <legend>epiCalendar</legend>\n        <div className={classes.control}>\n          <div className={codeInputClasses}>\n            <label htmlFor=\"codigo\">JSESSIONID</label>\n            <input\n              type=\"text\"\n              id=\"codigo\"\n              name=\"jsessionid\"\n              onChange={codeChangeHandler}\n              onBlur={codeBlurHandler}\n              value={enteredCode}\n              placeholder=\"0000XXXXXXXXXXXXXXXXXXXXXXX:1dXXXXXXX\"\n            />\n            {codeHasError && (\n              <React.Fragment>\n                <p className={classes.error}>El código no es válido.</p>\n              </React.Fragment>\n            )}\n          </div>\n          <div>\n            <input type=\"hidden\" name=\"filename\" value={ctx.saveas} />\n          </div>\n          <div>\n            <input\n              type=\"hidden\"\n              name=\"location\"\n              value={\n                ctx.university === \"uo\"\n                  ? ctx.oviedoCheck.parse\n                  : ctx.epiCheck.parse\n              }\n            />\n          </div>\n          <div>\n            <input\n              type=\"hidden\"\n              name=\"experimental-location\"\n              value={\n                ctx.university === \"uo\"\n                  ? ctx.oviedoCheck.experimental\n                  : ctx.epiCheck.experimental\n              }\n            />\n          </div>\n          <div>\n            <input\n              type=\"hidden\"\n              name=\"class-type\"\n              value={\n                ctx.university === \"uo\"\n                  ? ctx.oviedoCheck.classParsing\n                  : ctx.epiCheck.classParsing\n              }\n            />\n          </div>\n        </div>\n      </form>\n\n      <div className={classes.actions}>\n        <HeaderSettingsButton onClick={props.onShowSettings} />\n        <button\n          className=\"button\"\n          disabled={!formIsValid}\n          onClick={formSubmissionHandler}\n        >\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          Generar\n        </button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Form;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport classes from \"./Modal.module.css\";\n\nconst Backdrop = (props) => {\n  return <div className={classes.backdrop} onClick={props.onClose} />;\n};\n\nconst ModalOverlay = (props) => {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.content}>{props.children}</div>\n    </div>\n  );\n};\n\nconst portalElement = document.getElementById(\"overlays\");\n\nconst Modal = (props) => {\n  return (\n    <Fragment>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.onClose} />,\n        portalElement\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        portalElement\n      )}\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport classes from \"./Checkboxes.module.css\";\nimport SettingsContext from \"../../store/settings-context\";\n\nconst Checkboxes = () => {\n  const ctx = useContext(SettingsContext);\n\n  const [parse, setParse] = useState({ parse: true, parseDisabled: false });\n  const [experimental, setExperimental] = useState({\n    experimental: true,\n    experimentalDisabled: false,\n  });\n  const [classParse, setClassParse] = useState({\n    classParsing: true,\n    classParsingDisabled: false,\n  });\n\n  // No dependecies as we want the checkboxes to be updated only on first render\n  useEffect(() => {\n    if (ctx.university === \"uo\") {\n      console.log(\"entra uo\");\n      setParse({\n        parse: ctx.oviedoCheck.parse,\n        parseDisabled: ctx.oviedoCheck.parseDisabled,\n      });\n      setExperimental({\n        experimental: ctx.oviedoCheck.experimental,\n        experimentalDisabled: ctx.oviedoCheck.experimentalDisabled,\n      });\n      setClassParse({\n        classParsing: ctx.oviedoCheck.classParsing,\n        classParsingDisabled: ctx.oviedoCheck.classParsingDisabled,\n      });\n    } else if (ctx.university === \"epi\") {\n      console.log(\"entra epi\");\n      setParse({\n        parse: ctx.epiCheck.parse,\n        parseDisabled: ctx.epiCheck.parseDisabled,\n      });\n      setExperimental({\n        experimental: ctx.epiCheck.experimental,\n        experimentalDisabled: ctx.epiCheck.experimentalDisabled,\n      });\n      setClassParse({\n        classParsing: ctx.epiCheck.classParsing,\n        classParsingDisabled: ctx.epiCheck.classParsingDisabled,\n      });\n    }\n  }, [ctx.university, ctx.update]);\n\n  // Effect for updating the checkboxes\n  useEffect(() => {\n    ctx.parseHandler(parse.parse);\n    ctx.experimentalHandler(experimental.experimental);\n    ctx.classParsingHandler(classParse.classParsing);\n  }, [parse.parse, experimental.experimental, classParse.classParsing]);\n\n  const parseHandler = () => {\n    setParse((previousState) => ({\n      ...previousState,\n      parse: !previousState.parse,\n    }));\n    ctx.updateHandler(true);\n  };\n\n  const experimentalHandler = () => {\n    setExperimental((previousState) => ({\n      ...previousState,\n      experimental: !previousState.experimental,\n    }));\n    ctx.updateHandler(true);\n  };\n\n  const classParsingHandler = () => {\n    setClassParse((previousState) => ({\n      ...previousState,\n      classParsing: !previousState.classParsing,\n    }));\n    ctx.updateHandler(true);\n  };\n\n  return (\n    <div className={classes.overall}>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"location-parsing\"\n          checked={parse.parse}\n          onChange={parseHandler}\n          disabled={parse.parseDisabled}\n        />\n        <label htmlFor=\"location-parsing\">\n          Enable location parsing (EPI Gijón)\n        </label>\n      </div>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"experimental-parsing\"\n          checked={experimental.experimental}\n          onChange={experimentalHandler}\n          disabled={experimental.experimentalDisabled}\n        />\n        <label htmlFor=\"experimental-parsing\">\n          Enable experimental location parsing (EPI Gijón)\n        </label>\n      </div>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"class-parsing\"\n          checked={classParse.classParsing}\n          onChange={classParsingHandler}\n        />\n        <label htmlFor=\"class-parsing\">Enable class type parsing</label>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkboxes;\n","import React from \"react\";\nimport classes from \"./RadioButtons.module.css\";\n\n// Hard-coded list of universities\nconst universityList = [\n  { value: \"uo\", label: \"University of Oviedo\", id: \"uo\" },\n  { value: \"epi\", label: \"EPI Gijón\", id: \"epi\" },\n];\n\nconst RadioButtons = (props) => {\n  // Function that updates the university setting state\n  const handleChange = (e) => {\n    props.onClick(e.target.value);\n  };\n\n  // Key should be in the outer component to have access to the whole block\n  return (\n    <div>\n      {universityList.map((x) => (\n        <div className={classes.form} key={x.id}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"university\"\n              value={x.value}\n              onChange={handleChange}\n              defaultChecked={x.value === props.university}\n            />{\" \"}\n            {x.label}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default RadioButtons;\n","import React from \"react\";\nimport Checkboxes from \"./Checkboxes\";\n\nimport classes from \"./Options.module.css\";\nimport RadioButtons from \"./RadioButtons\";\n\nconst Options = (props) => {\n  return (\n    <React.Fragment>\n      <div className={classes.options}>\n        <h2>Settings</h2>\n      </div>\n      <div className={classes.separation}>\n        <RadioButtons onClick={props.onCheck} university={props.university} />\n        <hr\n          style={{\n            color: \"grey\",\n            backgroundColor: \"grey\",\n            borderColor: \"grey\",\n            height: 115,\n            fontWeight: \"bold\",\n            width: 5,\n            marginTop: \"0px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            borderRadius: 14,\n          }}\n        />\n        <Checkboxes university={props.university} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Options;\n","import React from \"react\";\n\nimport useInput from \"../../hooks/use-input\";\nimport classes from \"./Saver.module.css\";\n\nconst Saver = (props) => {\n  const {\n    value: enteredName,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n  } = useInput((value) => value.length > 0);\n\n  const nameHandlerValue = (name) => {\n    if (name.target.value.trim().length > 0) {\n      nameChangeHandler(name);\n      props.onSave(name.target.value);\n    } else if (name.target.value === \"\") {\n      console.log(\"Name is empty\");\n      nameChangeHandler(name);\n      props.onSave(\"Calendario\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.saveas}>\n        <h2>Guardar como</h2>\n      </div>\n      <div className={classes.form}>\n        <input\n          type=\"text\"\n          id=\"saveAs\"\n          name=\"filename\"\n          onChange={nameHandlerValue}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n          placeholder=\"Calendario\"\n        />\n        <input\n          className={classes.extension}\n          type=\"text\"\n          value=\".csv\"\n          name=\"extension\"\n          id=\"extension\"\n          disabled={true}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\n// ↑ añadir input con atributo \"readOnly\" que indique que la extensión es .csv obligatoriamente\n\nexport default Saver;\n","import React from \"react\";\nimport Modal from \"../UI/Modal\";\nimport Options from \"./Options\";\nimport Saver from \"./Saver\";\nimport classes from \"./Settings.module.css\";\nimport SettingsContext from \"../../store/settings-context\";\n\nconst Settings = (props) => {\n  const ctx = React.useContext(SettingsContext);\n  // Function for updating script settings\n  // const settingsHandler = () => {\n  //   console.log(ctx.university);\n  //   console.log(ctx.saveas);\n  //   console.log(\"CONFIRMACION\");\n  // };\n\n  return (\n    <Modal onClose={props.onClose}>\n      <div className={classes.overall}>\n        <Saver onSave={ctx.saveNameHandler} />\n        <Options onCheck={ctx.check} university={ctx.university} />\n        <div className={classes.buttons}>\n          <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n            Close\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\n/* <button className={classes.button} onClick={settingsHandler}>\n            Update\n          </button>\n          \n          */\n\nexport default Settings;\n","import React, { useState } from \"react\";\n\nimport Form from \"./components/Form/Form\";\nimport Settings from \"./components/Settings/Settings\";\nimport classes from \"./App.module.css\";\n\nfunction App() {\n  const [showSettings, setShowSettings] = useState(false);\n\n  const showSettingsHandler = () => {\n    setShowSettings(true);\n  };\n\n  const hideSettingsHandler = () => {\n    setShowSettings(false);\n  };\n\n  return (\n    <div className={classes.app}>\n      {showSettings && <Settings onClose={hideSettingsHandler} />}\n      <main>\n        <Form onShowSettings={showSettingsHandler} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { SettingsProvider } from \"./store/settings-context\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <SettingsProvider>\n    <App />\n  </SettingsProvider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Form/Form.module.css","components/UI/Modal.module.css","components/Settings/Saver.module.css","components/Settings/Settings.module.css","components/Form/HeaderSettingsButton.module.css","components/Settings/Options.module.css","components/Settings/Checkboxes.module.css","components/Settings/RadioButtons.module.css","hooks/use-input.js","components/Form/HeaderSettingsButton.js","store/settings-context.js","components/Form/Form.js","components/UI/Modal.js","components/Settings/Checkboxes.js","components/Settings/RadioButtons.js","components/Settings/Options.js","components/Settings/Saver.js","components/Settings/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","form","control","btn-anim1","btn-anim2","btn-anim3","btn-anim4","actions","invalid","error","backdrop","modal","slide-down","extension","saveas","total","overall","checkboxes","buttons","icon","badge","bump","options","separation","useInput","validateValue","_useState","useState","_useState2","Object","slicedToArray","enteredValue","setEnteredValue","_useState3","_useState4","isTouched","setIsTouched","valueIsValid","value","isValid","hasError","valueChangeHandler","event","target","inputBlurHandler","trim","length","reset","HeaderSettingsButton","props","btnIsHighlighted","btnClasses","concat","classes","button","react_default","a","createElement","className","onClick","SettingsContext","createContext","check","name","university","saveNameHandler","parse","experimental","classParsing","parseHandler","state","experimentalHandler","classParsingHandler","update","updateHandler","SettingsProvider","setUniversity","setSaveas","_useState5","_useState6","setUpdate","_useState7","_useState8","isCheckedParsing","setIsCheckedParsing","_useState9","_useState10","isCheckedExperimental","setIsCheckedExperimental","_useState11","_useState12","isClassParsing","setIsClassParsing","_useState13","parseDisabled","experimentalDisabled","classParsingDisabled","_useState14","oviedoCheck","setOviedoCheck","_useState15","_useState16","epiCheck","setEpiCheck","useEffect","existingValues","objectSpread","console","log","previousState","Provider","children","Form","ctx","React","useContext","_useInput","charAt","enteredCode","codeIsValid","codeHasError","codeChangeHandler","codeBlurHandler","codeReset","formIsValid","formSubmissionHandler","preventDefault","document","getElementById","submit","codeInputClasses","Fragment","method","onSubmit","id","htmlFor","type","onChange","onBlur","placeholder","Form_HeaderSettingsButton","onShowSettings","disabled","Backdrop","onClose","ModalOverlay","content","portalElement","Modal","react","ReactDOM","createPortal","Modal_Backdrop","Modal_ModalOverlay","Checkboxes","setParse","setExperimental","classParse","setClassParse","checked","universityList","label","RadioButtons","handleChange","e","map","x","key","defaultChecked","Options","Settings_RadioButtons","onCheck","Settings_Checkboxes","Saver","enteredName","nameChangeHandler","nameBlurHandler","onSave","Settings","UI_Modal","Settings_Saver","Settings_Options","App","showSettings","setShowSettings","app","components_Settings_Settings","components_Form_Form","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","createRoot","render","settings_context_SettingsProvider","src_App"],"mappings":"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","file":"static/js/main.2b18d309.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3N9xP\",\"control\":\"Form_control__2Hd3y\",\"btn-anim1\":\"Form_btn-anim1__3_-pr\",\"btn-anim2\":\"Form_btn-anim2__wFzsa\",\"btn-anim3\":\"Form_btn-anim3__2vJJx\",\"btn-anim4\":\"Form_btn-anim4__1e_AM\",\"actions\":\"Form_actions__2_19Y\",\"invalid\":\"Form_invalid__1zbxW\",\"error\":\"Form_error__24IC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3bwxq\",\"modal\":\"Modal_modal__1pZmX\",\"slide-down\":\"Modal_slide-down__1H0HJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Saver_form__3XrKa\",\"extension\":\"Saver_extension__3WZap\",\"invalid\":\"Saver_invalid__1dWqF\",\"error\":\"Saver_error__35SK9\",\"saveas\":\"Saver_saveas__1P7e9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Settings_form__1Qk8i\",\"total\":\"Settings_total__1XkVL\",\"overall\":\"Settings_overall__4QOs4\",\"checkboxes\":\"Settings_checkboxes__19b_p\",\"buttons\":\"Settings_buttons__2eU31\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"HeaderSettingsButton_icon__1Y1Bf\",\"badge\":\"HeaderSettingsButton_badge__1lrE1\",\"bump\":\"HeaderSettingsButton_bump__1uSXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Options_options__2hcQg\",\"separation\":\"Options_separation__3vDns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overall\":\"Checkboxes_overall__12sVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RadioButtons_form__1GDBR\"};","import { useState } from \"react\";\n\n// Custom hook to use the input\nconst useInput = (validateValue) => {\n  const [enteredValue, setEnteredValue] = useState(\"\"); // State for the entered input value\n  const [isTouched, setIsTouched] = useState(false); // State to check if the input has been touched\n\n  const valueIsValid = validateValue(enteredValue); // Check if the input value is valid through the validateValue function\n  const hasError = !valueIsValid && isTouched; // Check if the input has an error (if it is not valid and it has been touched)\n\n  // Function to update the enteredValue of the input\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  // Function to update the isTouched state of the input\n  const inputBlurHandler = () => {\n    if (enteredValue.trim().length === 0) {\n      setIsTouched(false);\n    } else {\n      setIsTouched(true);\n    }\n  };\n\n  // Reset for the enteredValue and isTouched state\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n","import React, { useState } from \"react\";\n\n//import CartContext from \"../../store/cart-context\";\nimport classes from \"./HeaderSettingsButton.module.css\";\n\nconst HeaderSettingsButton = (props) => {\n  const [btnIsHighlighted] = useState(false);\n\n  const btnClasses = `${classes.button} ${\n    btnIsHighlighted ? classes.bump : \"\"\n  }`;\n\n  return (\n    <button className={btnClasses} onClick={props.onClick}>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      ⚙\n    </button>\n  );\n};\n\nexport default HeaderSettingsButton;\n","import React, { createContext, useEffect, useState } from \"react\";\n\n// Default values for the context\nexport const DEFAULT_FILENAME = \"Calendario\";\nexport const DEFAULT_UNIVERSITY = \"epi\";\n\n// Context for the settings of the app (better autocomplete)\nconst SettingsContext = createContext({\n  check: (name) => {},\n  university: \"\",\n  saveNameHandler: (name) => {},\n  saveas: \"\",\n  parse: true,\n  experimental: true,\n  classParsing: true,\n  parseHandler: (state) => {},\n  experimentalHandler: (state) => {},\n  classParsingHandler: (state) => {},\n  update: false,\n  updateHandler: (state) => {},\n});\n\nexport const SettingsProvider = (props) => {\n  const [university, setUniversity] = useState(\"epi\"); // State for the university\n  const [saveas, setSaveas] = useState(\"Calendario\"); // State for the filename\n\n  // States for checkboxes\n  const [update, setUpdate] = useState(false);\n  const [isCheckedParsing, setIsCheckedParsing] = useState(true);\n  const [isCheckedExperimental, setIsCheckedExperimental] = useState(true);\n  const [isClassParsing, setIsClassParsing] = useState(true);\n\n  // More general states which are used in the form to save the settings\n  const [oviedoCheck, setOviedoCheck] = useState({\n    parse: false,\n    experimental: false,\n    classParsing: true,\n    parseDisabled: true,\n    experimentalDisabled: true,\n    classParsingDisabled: false,\n  });\n  const [epiCheck, setEpiCheck] = useState({\n    parse: true,\n    experimental: true,\n    classParsing: true,\n    parseDisabled: false,\n    experimentalDisabled: false,\n    classParsingDisabled: false,\n  });\n\n  // useEffect hooks to update the states of the checkboxes\n  useEffect(() => {\n    if (university === \"epi\") {\n      setEpiCheck((existingValues) => ({\n        ...existingValues,\n        parse: isCheckedParsing,\n        parseDisabled: false,\n        experimental: isCheckedParsing === true ? true : false,\n        experimentalDisabled: isCheckedParsing === true ? false : true,\n        classParsingDisabled: false,\n      }));\n    }\n    setUpdate(false);\n  }, [isCheckedParsing]);\n  useEffect(() => {\n    console.log(\"entra\");\n    if (university === \"epi\") {\n      setEpiCheck((previousState) => ({\n        ...previousState,\n        experimental: isCheckedParsing === true ? isCheckedExperimental : false,\n      }));\n    }\n    setUpdate(false);\n  }, [isCheckedExperimental]);\n  useEffect(() => {\n    console.log(\"entra en classParsing\");\n    if (university === \"uo\") {\n      setOviedoCheck((previousState) => ({\n        ...previousState,\n        classParsing: isClassParsing,\n      }));\n    } else {\n      setEpiCheck((previousState) => ({\n        ...previousState,\n        classParsing: isClassParsing,\n      }));\n    }\n    setUpdate(false);\n  }, [isClassParsing]);\n\n  // Function to set the university state\n  const checkHandler = (name) => {\n    setUniversity(name);\n  };\n\n  // Function to set the filename state\n  const saveNameHandler = (name) => {\n    setSaveas(name);\n  };\n\n  // Functions to set the checkboxes state\n  const parseHandler = (state) => {\n    setIsCheckedParsing(state);\n  };\n  const experimentalHandler = (state) => {\n    setIsCheckedExperimental(state);\n  };\n  const classParsingHandler = (state) => {\n    setIsClassParsing(state);\n  };\n\n  // Function to set the update state\n  const updateHandler = (state) => {\n    setUpdate(state);\n  };\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        check: checkHandler,\n        university: university,\n        saveNameHandler: saveNameHandler,\n        saveas: saveas,\n        parseHandler: parseHandler,\n        experimentalHandler: experimentalHandler,\n        classParsingHandler: classParsingHandler,\n        oviedoCheck: oviedoCheck,\n        epiCheck: epiCheck,\n        update: update,\n        updateHandler: updateHandler,\n      }}\n    >\n      {props.children}\n    </SettingsContext.Provider>\n  );\n};\n\nexport default SettingsContext;\n","import useInput from \"../../hooks/use-input\";\nimport HeaderSettingsButton from \"./HeaderSettingsButton\";\nimport React from \"react\";\n\nimport SettingsContext from \"../../store/settings-context\";\nimport classes from \"./Form.module.css\";\n\n// Import the default state\nimport {\n  DEFAULT_FILENAME,\n  DEFAULT_UNIVERSITY,\n} from \"../../store/settings-context\";\n\n// Component that represents the form\nconst Form = (props) => {\n  // Access the settings context\n  const ctx = React.useContext(SettingsContext);\n\n  const {\n    value: enteredCode,\n    isValid: codeIsValid,\n    hasError: codeHasError,\n    valueChangeHandler: codeChangeHandler,\n    inputBlurHandler: codeBlurHandler,\n    reset: codeReset,\n  } = useInput(\n    (value) =>\n      value.length === 37 &&\n      value.charAt(0) === \"0\" &&\n      value.charAt(1) === \"0\" &&\n      value.charAt(2) === \"0\" &&\n      value.charAt(3) === \"0\" &&\n      value.charAt(27) === \":\" &&\n      value.charAt(28) === \"1\" &&\n      value.charAt(29) === \"d\"\n  );\n\n  // Variable for the validity of the form\n  let formIsValid = codeIsValid;\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    if (!codeIsValid) {\n      console.log(\"Code is not valid\");\n      return;\n    }\n\n    document.getElementById(\"form\").submit();\n    ctx.saveNameHandler(DEFAULT_FILENAME);\n    ctx.check(DEFAULT_UNIVERSITY);\n    codeReset();\n  };\n\n  // Styling for the form (error message)\n  const codeInputClasses = `${classes.form} ${\n    codeHasError ? classes.invalid : \"\"\n  }`;\n\n  return (\n    <React.Fragment>\n      <form method=\"post\" onSubmit={formSubmissionHandler} id=\"form\">\n        <legend>epiCalendar</legend>\n        <div className={classes.control}>\n          <div className={codeInputClasses}>\n            <label htmlFor=\"codigo\">JSESSIONID</label>\n            <input\n              type=\"text\"\n              id=\"codigo\"\n              name=\"jsessionid\"\n              onChange={codeChangeHandler}\n              onBlur={codeBlurHandler}\n              value={enteredCode}\n              placeholder=\"0000XXXXXXXXXXXXXXXXXXXXXXX:1dXXXXXXX\"\n            />\n            {codeHasError && (\n              <React.Fragment>\n                <p className={classes.error}>El código no es válido.</p>\n              </React.Fragment>\n            )}\n          </div>\n          <div>\n            <input type=\"hidden\" name=\"filename\" value={ctx.saveas} />\n          </div>\n          <div>\n            <input\n              type=\"hidden\"\n              name=\"location\"\n              value={\n                ctx.university === \"uo\"\n                  ? ctx.oviedoCheck.parse\n                  : ctx.epiCheck.parse\n              }\n            />\n          </div>\n          <div>\n            <input\n              type=\"hidden\"\n              name=\"experimental-location\"\n              value={\n                ctx.university === \"uo\"\n                  ? ctx.oviedoCheck.experimental\n                  : ctx.epiCheck.experimental\n              }\n            />\n          </div>\n          <div>\n            <input\n              type=\"hidden\"\n              name=\"class-type\"\n              value={\n                ctx.university === \"uo\"\n                  ? ctx.oviedoCheck.classParsing\n                  : ctx.epiCheck.classParsing\n              }\n            />\n          </div>\n        </div>\n      </form>\n\n      <div className={classes.actions}>\n        <HeaderSettingsButton onClick={props.onShowSettings} />\n        <button\n          className=\"button\"\n          disabled={!formIsValid}\n          onClick={formSubmissionHandler}\n        >\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          Generar\n        </button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Form;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport classes from \"./Modal.module.css\";\n\n// Modal backdrop\nconst Backdrop = (props) => {\n  return <div className={classes.backdrop} onClick={props.onClose} />;\n};\n\n// Modal overlay which contains the modal\nconst ModalOverlay = (props) => {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.content}>{props.children}</div>\n    </div>\n  );\n};\n\n// Get the overlays element from the public/index.html file\nconst portalElement = document.getElementById(\"overlays\");\n\n// Modal component which contains the backdrop and the modal overlay\nconst Modal = (props) => {\n  return (\n    <Fragment>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.onClose} />,\n        portalElement\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        portalElement\n      )}\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport classes from \"./Checkboxes.module.css\";\nimport SettingsContext from \"../../store/settings-context\";\n\n// Component that represents the 3 checkboxes\nconst Checkboxes = () => {\n  // Access the settings context\n  const ctx = useContext(SettingsContext);\n\n  // State for the checkboxes\n  const [parse, setParse] = useState({ parse: true, parseDisabled: false });\n  const [experimental, setExperimental] = useState({\n    experimental: true,\n    experimentalDisabled: false,\n  });\n  const [classParse, setClassParse] = useState({\n    classParsing: true,\n    classParsingDisabled: false,\n  });\n\n  // No dependecies as we want the checkboxes to be updated only on first render\n  useEffect(() => {\n    if (ctx.university === \"uo\") {\n      console.log(\"entra uo\");\n      setParse({\n        parse: ctx.oviedoCheck.parse,\n        parseDisabled: ctx.oviedoCheck.parseDisabled,\n      });\n      setExperimental({\n        experimental: ctx.oviedoCheck.experimental,\n        experimentalDisabled: ctx.oviedoCheck.experimentalDisabled,\n      });\n      setClassParse({\n        classParsing: ctx.oviedoCheck.classParsing,\n        classParsingDisabled: ctx.oviedoCheck.classParsingDisabled,\n      });\n    } else if (ctx.university === \"epi\") {\n      console.log(\"entra epi\");\n      setParse({\n        parse: ctx.epiCheck.parse,\n        parseDisabled: ctx.epiCheck.parseDisabled,\n      });\n      setExperimental({\n        experimental: ctx.epiCheck.experimental,\n        experimentalDisabled: ctx.epiCheck.experimentalDisabled,\n      });\n      setClassParse({\n        classParsing: ctx.epiCheck.classParsing,\n        classParsingDisabled: ctx.epiCheck.classParsingDisabled,\n      });\n    }\n  }, [ctx.university, ctx.update]);\n\n  // Effect for updating the checkboxes\n  useEffect(() => {\n    ctx.parseHandler(parse.parse);\n    ctx.experimentalHandler(experimental.experimental);\n    ctx.classParsingHandler(classParse.classParsing);\n  }, [parse.parse, experimental.experimental, classParse.classParsing]);\n\n  // Function that handles the checkbox change (parse or location)\n  const parseHandler = () => {\n    setParse((previousState) => ({\n      ...previousState,\n      parse: !previousState.parse,\n    }));\n    ctx.updateHandler(true);\n  };\n\n  // Function that handles the checkbox change (experimental or experimental-location)\n  const experimentalHandler = () => {\n    setExperimental((previousState) => ({\n      ...previousState,\n      experimental: !previousState.experimental,\n    }));\n    ctx.updateHandler(true);\n  };\n\n  // Function that handles the checkbox change (class-type or class-type)\n  const classParsingHandler = () => {\n    setClassParse((previousState) => ({\n      ...previousState,\n      classParsing: !previousState.classParsing,\n    }));\n    ctx.updateHandler(true);\n  };\n\n  return (\n    <div className={classes.overall}>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"location-parsing\"\n          checked={parse.parse}\n          onChange={parseHandler}\n          disabled={parse.parseDisabled}\n        />\n        <label htmlFor=\"location-parsing\">\n          Location parsing (EPI Gijón)\n        </label>\n      </div>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"experimental-parsing\"\n          checked={experimental.experimental}\n          onChange={experimentalHandler}\n          disabled={experimental.experimentalDisabled}\n        />\n        <label htmlFor=\"experimental-parsing\">\n          Experimental location parsing (EPI Gijón)\n        </label>\n      </div>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"class-parsing\"\n          checked={classParse.classParsing}\n          onChange={classParsingHandler}\n        />\n        <label htmlFor=\"class-parsing\">Class type parsing</label>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkboxes;\n","import React from \"react\";\nimport classes from \"./RadioButtons.module.css\";\n\n// Hard-coded list of universities\nconst universityList = [\n  { value: \"uo\", label: \"University of Oviedo\", id: \"uo\" },\n  { value: \"epi\", label: \"EPI Gijón\", id: \"epi\" },\n];\n\n// Component which contains the radio buttons for the universities\nconst RadioButtons = (props) => {\n  // Function that updates the university setting state\n  const handleChange = (e) => {\n    props.onClick(e.target.value);\n  };\n\n  // Key should be in the outer component to have access to the whole block\n  return (\n    <div>\n      {universityList.map((x) => (\n        <div className={classes.form} key={x.id}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"university\"\n              value={x.value}\n              onChange={handleChange}\n              defaultChecked={x.value === props.university}\n            />{\" \"}\n            {x.label}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default RadioButtons;\n","import React from \"react\";\nimport Checkboxes from \"./Checkboxes\";\n\nimport classes from \"./Options.module.css\";\nimport RadioButtons from \"./RadioButtons\";\n\n// General component for the radio buttons and checkboxes\nconst Options = (props) => {\n  return (\n    <React.Fragment>\n      <div className={classes.options}>\n        <h3>Settings</h3>\n      </div>\n      <div className={classes.separation}>\n        <fieldset id=\"radiobuttons\">\n        <RadioButtons onClick={props.onCheck} university={props.university} />\n        </fieldset>\n        <Checkboxes university={props.university} />\n      </div>\n    </React.Fragment>\n  );\n};\n\n/*\n<hr\n  style={{\n    color: \"grey\",\n    backgroundColor: \"grey\",\n    borderColor: \"grey\",\n    height: 115,\n    fontWeight: \"bold\",\n    width: 5,\n    marginTop: \"0px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    borderRadius: 14,\n  }}\n/>\n*/\n\nexport default Options;\n","import React from \"react\";\n\nimport useInput from \"../../hooks/use-input\";\nimport classes from \"./Saver.module.css\";\n\n// Component to set the name of the filename\nconst Saver = (props) => {\n  // useInput hook to get the name of filename\n  const {\n    value: enteredName,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n  } = useInput((value) => value.length > 0);\n\n  // Function to set the name of the file\n  const nameHandlerValue = (name) => {\n    if (name.target.value.trim().length > 0) {\n      nameChangeHandler(name);\n      props.onSave(name.target.value);\n    } else if (name.target.value === \"\") {\n      console.log(\"Name is empty\");\n      nameChangeHandler(name);\n      props.onSave(\"Calendario\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.saveas}>\n        <h3>Filename</h3>\n      </div>\n      <div className={classes.form}>\n        <input\n          type=\"text\"\n          id=\"saveAs\"\n          name=\"filename\"\n          onChange={nameHandlerValue}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n          placeholder=\"Calendario\"\n        />\n        <input\n          className={classes.extension}\n          type=\"text\"\n          value=\".csv\"\n          name=\"extension\"\n          id=\"extension\"\n          disabled={true}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Saver;\n","import React from \"react\";\nimport Modal from \"../UI/Modal\";\nimport Options from \"./Options\";\nimport Saver from \"./Saver\";\nimport classes from \"./Settings.module.css\";\nimport SettingsContext from \"../../store/settings-context\";\n\n// Settings component which contains the modal and the options\nconst Settings = (props) => {\n  // Context to access the settings state\n  const ctx = React.useContext(SettingsContext);\n\n  return (\n    <Modal onClose={props.onClose}>\n      <div className={classes.overall}>\n        <Saver onSave={ctx.saveNameHandler} />\n        <Options onCheck={ctx.check} university={ctx.university} />\n        <div className={classes.buttons}>\n          <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n            <span></span>\n            <span></span>\n            <span></span>\n            <span></span>\n            Close\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default Settings;\n","import React, { useState } from \"react\";\n\nimport Form from \"./components/Form/Form\";\nimport Settings from \"./components/Settings/Settings\";\nimport classes from \"./App.module.css\";\n\nfunction App() {\n  // State for the modal window to be open or closed\n  const [showSettings, setShowSettings] = useState(false);\n\n  // Function to toggle (show) the modal window\n  const showSettingsHandler = () => {\n    setShowSettings(true);\n  };\n\n  // Function to toggle (hide) the modal window\n  const hideSettingsHandler = () => {\n    setShowSettings(false);\n  };\n\n  return (\n    <div className={classes.app}>\n      {showSettings && <Settings onClose={hideSettingsHandler} />}\n      <main>\n        <Form onShowSettings={showSettingsHandler} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { SettingsProvider } from \"./store/settings-context\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <SettingsProvider>\n    <App />\n  </SettingsProvider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
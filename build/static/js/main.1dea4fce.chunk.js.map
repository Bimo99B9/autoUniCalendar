{"version":3,"sources":["components/Form/Form.module.css","components/UI/Modal.module.css","components/Settings/Saver.module.css","components/Settings/Settings.module.css","components/Form/HeaderSettingsButton.module.css","components/Settings/Options.module.css","components/Settings/Checkboxes.module.css","components/Settings/RadioButtons.module.css","hooks/use-input.js","components/Form/HeaderSettingsButton.js","store/settings-context.js","components/Form/Form.js","components/UI/Modal.js","components/Settings/Checkboxes.js","components/Settings/RadioButtons.js","components/Settings/Options.js","components/Settings/Saver.js","components/Settings/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","form","control","btn-anim1","btn-anim2","btn-anim3","btn-anim4","actions","invalid","error","backdrop","modal","slide-down","saveas","extension","total","overall","checkboxes","buttons","button--alt","button","icon","badge","bump","options","separation","useInput","validateValue","_useState","useState","_useState2","Object","slicedToArray","enteredValue","setEnteredValue","_useState3","_useState4","isTouched","setIsTouched","valueIsValid","value","isValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","HeaderSettingsButton","props","btnIsHighlighted","btnClasses","concat","classes","react_default","a","createElement","className","onClick","SettingsContext","createContext","check","name","university","saveNameHandler","parse","experimental","classParsing","parseHandler","state","experimentalHandler","classParsingHandler","isTouchHandler","SettingsProvider","setUniversity","setSaveas","_useState5","_useState6","_useState7","_useState8","isCheckedParsing","setIsCheckedParsing","_useState9","_useState10","isCheckedExperimental","setIsCheckedExperimental","_useState11","_useState12","isClassParsing","_useState13","parseDisabled","experimentalDisabled","classParsingDisabled","_useState14","oviedoCheck","setOviedoCheck","_useState15","_useState16","epiCheck","setEpiCheck","useEffect","existingValues","objectSpread","previousState","Provider","children","Form","ctx","React","useContext","_useInput","length","charAt","enteredCode","codeIsValid","codeHasError","codeChangeHandler","codeBlurHandler","codeReset","formIsValid","formSubmissionHandler","preventDefault","document","getElementById","submit","console","log","codeInputClasses","Fragment","method","onSubmit","id","htmlFor","type","onChange","onBlur","placeholder","Form_HeaderSettingsButton","onShowSettings","disabled","Backdrop","onClose","ModalOverlay","content","portalElement","Modal","react","ReactDOM","createPortal","Modal_Backdrop","Modal_ModalOverlay","Checkboxes","setParse","setExperimental","classParse","setClassParse","checked","universityList","label","RadioButtons","handleChange","e","map","x","key","defaultChecked","Options","Settings_RadioButtons","onCheck","style","color","backgroundColor","borderColor","height","fontWeight","width","marginTop","marginLeft","marginRight","borderRadius","Settings_Checkboxes","Saver","enteredName","nameChangeHandler","nameBlurHandler","trim","onSave","Settings","UI_Modal","Settings_Saver","Settings_Options","App","showSettings","setShowSettings","app","components_Settings_Settings","components_Form_Form","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","createRoot","render","settings_context_SettingsProvider","src_App"],"mappings":"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","file":"static/js/main.1dea4fce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3N9xP\",\"control\":\"Form_control__2Hd3y\",\"btn-anim1\":\"Form_btn-anim1__3_-pr\",\"btn-anim2\":\"Form_btn-anim2__wFzsa\",\"btn-anim3\":\"Form_btn-anim3__2vJJx\",\"btn-anim4\":\"Form_btn-anim4__1e_AM\",\"actions\":\"Form_actions__2_19Y\",\"invalid\":\"Form_invalid__1zbxW\",\"error\":\"Form_error__24IC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3bwxq\",\"modal\":\"Modal_modal__1pZmX\",\"slide-down\":\"Modal_slide-down__1H0HJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Saver_form__3XrKa\",\"invalid\":\"Saver_invalid__1dWqF\",\"error\":\"Saver_error__35SK9\",\"saveas\":\"Saver_saveas__1P7e9\",\"extension\":\"Saver_extension__3WZap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Settings_form__1Qk8i\",\"total\":\"Settings_total__1XkVL\",\"overall\":\"Settings_overall__4QOs4\",\"checkboxes\":\"Settings_checkboxes__19b_p\",\"buttons\":\"Settings_buttons__2eU31\",\"button--alt\":\"Settings_button--alt__uOqtR\",\"button\":\"Settings_button__13X5e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"HeaderSettingsButton_icon__1Y1Bf\",\"badge\":\"HeaderSettingsButton_badge__1lrE1\",\"bump\":\"HeaderSettingsButton_bump__1uSXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Options_options__2hcQg\",\"separation\":\"Options_separation__3vDns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overall\":\"Checkboxes_overall__12sVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RadioButtons_form__1GDBR\"};","import { useState } from \"react\";\n\nconst useInput = (validateValue) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = () => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n","import React, { useState } from \"react\";\n\nimport SettingsIcon from \"../Settings/SettingsIcon\";\n//import CartContext from \"../../store/cart-context\";\nimport classes from \"./HeaderSettingsButton.module.css\";\n\nconst HeaderSettingsButton = (props) => {\n  const [btnIsHighlighted] = useState(false);\n\n  const btnClasses = `${classes.button} ${\n    btnIsHighlighted ? classes.bump : \"\"\n  }`;\n\n  return (\n    <button className={btnClasses} onClick={props.onClick}>\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n      ⚙\n    </button>\n  );\n};\n\nexport default HeaderSettingsButton;\n","import React, { createContext, useEffect, useState } from \"react\";\n\nexport const DEFAULT_FILENAME = \"Calendario\";\nexport const DEFAULT_UNIVERSITY = \"epi\";\n\nconst SettingsContext = createContext({\n  check: (name) => {},\n  university: \"\",\n  saveNameHandler: (name) => {},\n  saveas: \"\",\n  parse: true,\n  experimental: true,\n  classParsing: true,\n  parseHandler: (state) => {},\n  experimentalHandler: (state) => {},\n  classParsingHandler: (state) => {},\n  isTouched: false,\n  isTouchHandler: (state) => {},\n});\n\nexport const SettingsProvider = (props) => {\n  const [university, setUniversity] = useState(\"epi\");\n  const [saveas, setSaveas] = useState(\"Calendario\");\n  // States for checkboxes\n  const [isTouched, setIsTouched] = useState(false);\n  const [isCheckedParsing, setIsCheckedParsing] = useState(true);\n  const [isCheckedExperimental, setIsCheckedExperimental] = useState(true);\n  const [isClassParsing, setIsClassParsing] = useState(true);\n\n  // Cambio en estado de checkboxes para intentar hacer un estado por universidad\n  const [oviedoCheck, setOviedoCheck] = useState({\n    parse: false,\n    experimental: false,\n    classParsing: true,\n    parseDisabled: true,\n    experimentalDisabled: true,\n    classParsingDisabled: false,\n  });\n\n  const [epiCheck, setEpiCheck] = useState({\n    parse: true,\n    experimental: true,\n    classParsing: true,\n    parseDisabled: false,\n    experimentalDisabled: false,\n    classParsingDisabled: false,\n  });\n\n  useEffect(() => {\n    if (university === \"epi\") {\n      setEpiCheck((existingValues) => ({\n        ...existingValues,\n        parse: isCheckedParsing,\n        parseDisabled: false,\n        experimental: isCheckedParsing === true ? isCheckedExperimental : false,\n        experimentalDisabled: isCheckedParsing === true ? false : true,\n        classParsingDisabled: false,\n      }));\n    }\n  }, [isCheckedParsing]);\n\n  useEffect(() => {\n    if (university === \"epi\") {\n      setEpiCheck((previousState) => ({\n        ...previousState,\n        experimental: isCheckedParsing === true ? isCheckedExperimental : false,\n      }));\n    }\n  }, [isCheckedExperimental]);\n\n  useEffect(() => {}, [isClassParsing]);\n\n  const checkHandler = (name) => {\n    setUniversity(name);\n  };\n\n  const saveNameHandler = (name) => {\n    setSaveas(name);\n  };\n\n  const parseHandler = (state) => {\n    setIsCheckedParsing(state);\n  };\n\n  const experimentalHandler = (state) => {\n    setIsCheckedExperimental(state);\n  };\n\n  const classParsingHandler = (state) => {\n    // console.log(state);\n    if (university === \"uo\") {\n      setOviedoCheck({\n        parse: false,\n        experimental: false,\n        classParsing: state,\n        parseDisabled: true,\n        experimentalDisabled: true,\n        classParsingDisabled: false,\n      });\n    } else {\n      setEpiCheck({\n        parse: epiCheck.parse,\n        experimental: epiCheck.experimental,\n        classParsing: state,\n        parseDisabled: false,\n        experimentalDisabled: false,\n        classParsingDisabled: false,\n      });\n    }\n    // setIsClassParsing(state);\n  };\n\n  const isTouchedHandler = (state) => {\n    setIsTouched(state);\n  };\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        check: checkHandler,\n        university: university,\n        saveNameHandler: saveNameHandler,\n        saveas: saveas,\n        // parse: isCheckedParsing,\n        // experimental: isCheckedExperimental,\n        // classParsing: isClassParsing,\n        parseHandler: parseHandler,\n        experimentalHandler: experimentalHandler,\n        classParsingHandler: classParsingHandler,\n        isTouched: isTouched,\n        isTouchHandler: isTouchedHandler,\n        oviedoCheck: oviedoCheck,\n        epiCheck: epiCheck,\n      }}\n    >\n      {props.children}\n    </SettingsContext.Provider>\n  );\n};\n\nexport default SettingsContext;\n","import useInput from \"../../hooks/use-input\";\nimport HeaderSettingsButton from \"./HeaderSettingsButton\";\nimport React from \"react\";\n\nimport SettingsContext from \"../../store/settings-context\";\nimport classes from \"./Form.module.css\";\nimport {\n  DEFAULT_FILENAME,\n  DEFAULT_UNIVERSITY,\n} from \"../../store/settings-context\";\n\nconst Form = (props) => {\n  const ctx = React.useContext(SettingsContext);\n\n  const {\n    value: enteredCode,\n    isValid: codeIsValid,\n    hasError: codeHasError,\n    valueChangeHandler: codeChangeHandler,\n    inputBlurHandler: codeBlurHandler,\n    reset: codeReset,\n  } = useInput(\n    (value) =>\n      value.length === 37 &&\n      value.charAt(0) === \"0\" &&\n      value.charAt(1) === \"0\" &&\n      value.charAt(2) === \"0\" &&\n      value.charAt(3) === \"0\" &&\n      value.charAt(27) === \":\" &&\n      value.charAt(28) === \"1\" &&\n      value.charAt(29) === \"d\"\n  );\n\n  let formIsValid = false;\n\n  if (codeIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    if (!codeIsValid) {\n      console.log(\"Code is not valid\");\n      return;\n    }\n\n    document.getElementById(\"form\").submit();\n    ctx.saveNameHandler(DEFAULT_FILENAME);\n    ctx.check(DEFAULT_UNIVERSITY);\n    codeReset();\n  };\n\n  const codeInputClasses = `${classes.form} ${\n    codeHasError ? classes.invalid : \"\"\n  }`;\n\n  return (\n    <React.Fragment>\n      <form method=\"post\" onSubmit={formSubmissionHandler} id=\"form\">\n        <legend>epiCalendar</legend>\n        <div className={classes.control}>\n          <div className={codeInputClasses}>\n            <label htmlFor=\"codigo\">JSESSIONID</label>\n            <input\n              type=\"text\"\n              id=\"codigo\"\n              name=\"jsessionid\"\n              onChange={codeChangeHandler}\n              onBlur={codeBlurHandler}\n              value={enteredCode}\n              placeholder=\"0000XXXXXXXXXXXXXXXXXXXXXXX:1dXXXXXXX\"\n            />\n            {codeHasError && (\n              <React.Fragment>\n                <p className={classes.error}>El código no es válido.</p>\n              </React.Fragment>\n            )}\n          </div>\n          <div>\n            <input type=\"hidden\" name=\"filename\" value={ctx.saveas} />\n          </div>\n        </div>\n      </form>\n\n      <div className={classes.actions}>\n        <HeaderSettingsButton onClick={props.onShowSettings} />\n        <button\n          className=\"button\"\n          disabled={!formIsValid}\n          onClick={formSubmissionHandler}\n        >\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          Generar\n        </button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Form;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport classes from \"./Modal.module.css\";\n\nconst Backdrop = (props) => {\n  return <div className={classes.backdrop} onClick={props.onClose} />;\n};\n\nconst ModalOverlay = (props) => {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.content}>{props.children}</div>\n    </div>\n  );\n};\n\nconst portalElement = document.getElementById(\"overlays\");\n\nconst Modal = (props) => {\n  return (\n    <Fragment>\n      {ReactDOM.createPortal(\n        <Backdrop onClose={props.onClose} />,\n        portalElement\n      )}\n      {ReactDOM.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        portalElement\n      )}\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport classes from \"./Checkboxes.module.css\";\nimport SettingsContext from \"../../store/settings-context\";\n\nconst Checkboxes = () => {\n  const ctx = useContext(SettingsContext);\n\n  const [parse, setParse] = useState({ parse: true, parseDisabled: false });\n  const [experimental, setExperimental] = useState({\n    experimental: true,\n    experimentalDisabled: false,\n  });\n  const [classParse, setClassParse] = useState({\n    classParsing: true,\n    classParsingDisabled: false,\n  });\n\n  // No dependecies as we want the checkboxes to be updated only on first render\n  useEffect(() => {\n    if (ctx.university === \"uo\") {\n      console.log(\"entra uo\");\n      setParse({\n        parse: ctx.oviedoCheck.parse,\n        parseDisabled: ctx.oviedoCheck.parseDisabled,\n      });\n      setExperimental({\n        experimental: ctx.oviedoCheck.experimental,\n        experimentalDisabled: ctx.oviedoCheck.experimentalDisabled,\n      });\n      setClassParse({\n        classParsing: ctx.oviedoCheck.classParsing,\n        classParsingDisabled: ctx.oviedoCheck.classParsingDisabled,\n      });\n    } else if (ctx.university === \"epi\") {\n      console.log(\"entra epi\");\n      setParse({\n        parse: ctx.epiCheck.parse,\n        parseDisabled: ctx.epiCheck.parseDisabled,\n      });\n      setExperimental({\n        experimental: ctx.epiCheck.experimental,\n        experimentalDisabled: ctx.epiCheck.experimentalDisabled,\n      });\n      setClassParse({\n        classParsing: ctx.epiCheck.classParsing,\n        classParsingDisabled: ctx.epiCheck.classParsingDisabled,\n      });\n    }\n  }, [ctx.university]);\n\n  // useEffect(() => {\n  //   setParse({\n  //     parse: ctx.epiCheck.parse,\n  //     parseDisabled: ctx.epiCheck.parseDisabled,\n  //   });\n  //   setExperimental({\n  //     experimental: ctx.epiCheck.experimental,\n  //     experimentalDisabled: ctx.epiCheck.experimentalDisabled,\n  //   });\n  //   setClassParse({\n  //     classParsing: ctx.epiCheck.classParsing,\n  //     classParsingDisabled: ctx.epiCheck.classParsingDisabled,\n  //   });\n  // }, [ctx.epiCheck]);\n\n  // Effect for updating the checkboxes\n  useEffect(() => {\n    ctx.parseHandler(parse.parse);\n    ctx.experimentalHandler(experimental.experimental);\n    ctx.classParsingHandler(classParse.classParsing);\n  }, [parse.parse, experimental.experimental, classParse.classParsing]);\n\n  const parseHandler = () => {\n    setParse((previousState) => ({\n      ...previousState,\n      parse: !previousState.parse,\n    }));\n  };\n\n  const experimentalHandler = () => {\n    setExperimental((previousState) => ({\n      ...previousState,\n      experimental: !previousState.experimental,\n    }));\n  };\n\n  const classParsingHandler = () => {\n    setClassParse((previousState) => ({\n      ...previousState,\n      classParsing: !previousState.classParsing,\n    }));\n  };\n\n  return (\n    <div className={classes.overall}>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"location-parsing\"\n          checked={parse.parse}\n          onChange={parseHandler}\n          disabled={parse.parseDisabled}\n        />\n        <label htmlFor=\"location-parsing\">\n          Enable location parsing (EPI Gijón)\n        </label>\n      </div>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"experimental-parsing\"\n          checked={experimental.experimental}\n          onChange={experimentalHandler}\n          disabled={experimental.experimentalDisabled}\n        />\n        <label htmlFor=\"experimental-parsing\">\n          Enable experimental location parsing (EPI Gijón)\n        </label>\n      </div>\n      <div>\n        <input\n          type=\"checkbox\"\n          id=\"class-parsing\"\n          checked={classParse.classParsing}\n          onChange={classParsingHandler}\n        />\n        <label htmlFor=\"class-parsing\">Enable class type parsing</label>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkboxes;\n","import React from \"react\";\nimport classes from \"./RadioButtons.module.css\";\n\n// Hard-coded list of universities\nconst universityList = [\n  { value: \"uo\", label: \"University of Oviedo\", id: \"uo\" },\n  { value: \"epi\", label: \"EPI Gijón\", id: \"epi\" },\n];\n\nconst RadioButtons = (props) => {\n  // Function that updates the university setting state\n  const handleChange = (e) => {\n    props.onClick(e.target.value);\n  };\n\n  // Key should be in the outer component to have access to the whole block\n  return (\n    <div>\n      {universityList.map((x) => (\n        <div className={classes.form} key={x.id}>\n          <label>\n            <input\n              type=\"radio\"\n              name=\"university\"\n              value={x.value}\n              onChange={handleChange}\n              defaultChecked={x.value === props.university}\n            />{\" \"}\n            {x.label}\n          </label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default RadioButtons;\n","import React from \"react\";\nimport Checkboxes from \"./Checkboxes\";\n\nimport classes from \"./Options.module.css\";\nimport RadioButtons from \"./RadioButtons\";\n\nconst Options = (props) => {\n  return (\n    <React.Fragment>\n      <div className={classes.options}>\n        <h2>Settings</h2>\n      </div>\n      <div className={classes.separation}>\n        <RadioButtons onClick={props.onCheck} university={props.university} />\n        <hr\n          style={{\n            color: \"grey\",\n            backgroundColor: \"grey\",\n            borderColor: \"grey\",\n            height: 115,\n            fontWeight: \"bold\",\n            width: 5,\n            marginTop: \"0px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            borderRadius: 14,\n          }}\n        />\n        <Checkboxes university={props.university} />\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Options;\n","import React from \"react\";\n\nimport useInput from \"../../hooks/use-input\";\nimport classes from \"./Saver.module.css\";\n\nconst Saver = (props) => {\n  const {\n    value: enteredName,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n  } = useInput((value) => value.length > 0);\n\n  const nameHandlerValue = (name) => {\n    if (name.target.value.trim().length > 0) {\n      nameChangeHandler(name);\n      props.onSave(name.target.value);\n    } else if (name.target.value === \"\") {\n      console.log(\"Name is empty\");\n      nameChangeHandler(name);\n      props.onSave(\"Calendario\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className={classes.saveas}>\n        <h2>Guardar como</h2>\n      </div>\n      <div className={classes.form}>\n        <input\n          type=\"text\"\n          id=\"saveAs\"\n          name=\"filename\"\n          onChange={nameHandlerValue}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n          placeholder=\"Calendario\"\n        />\n        <input\n          className={classes.extension}\n          type=\"text\"\n          value=\".csv\"\n          name=\"extension\"\n          id=\"extension\"\n          disabled={true}\n        />\n      </div>\n    </React.Fragment>\n  );\n};\n\n// ↑ añadir input con atributo \"readOnly\" que indique que la extensión es .csv obligatoriamente\n\nexport default Saver;\n","import React from \"react\";\nimport Modal from \"../UI/Modal\";\nimport Options from \"./Options\";\nimport Saver from \"./Saver\";\nimport classes from \"./Settings.module.css\";\nimport SettingsContext from \"../../store/settings-context\";\n\nconst Settings = (props) => {\n  const ctx = React.useContext(SettingsContext);\n  // Function for updating script settings\n  // const settingsHandler = () => {\n  //   console.log(ctx.university);\n  //   console.log(ctx.saveas);\n  //   console.log(\"CONFIRMACION\");\n  // };\n\n  return (\n    <Modal onClose={props.onClose}>\n      <div className={classes.overall}>\n        <Saver onSave={ctx.saveNameHandler} />\n        <Options onCheck={ctx.check} university={ctx.university} />\n        <div className={classes.buttons}>\n          <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n            Close\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\n/* <button className={classes.button} onClick={settingsHandler}>\n            Update\n          </button>\n          \n          */\n\nexport default Settings;\n","import React, { useState } from \"react\";\n\nimport Form from \"./components/Form/Form\";\nimport Settings from \"./components/Settings/Settings\";\nimport classes from \"./App.module.css\";\n\nfunction App() {\n  const [showSettings, setShowSettings] = useState(false);\n\n  const showSettingsHandler = () => {\n    setShowSettings(true);\n  };\n\n  const hideSettingsHandler = () => {\n    setShowSettings(false);\n  };\n\n  return (\n    <div className={classes.app}>\n      {showSettings && <Settings onClose={hideSettingsHandler} />}\n      <main>\n        <Form onShowSettings={showSettingsHandler} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { SettingsProvider } from \"./store/settings-context\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <SettingsProvider>\n    <App />\n  </SettingsProvider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}